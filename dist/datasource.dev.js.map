{"version":3,"sources":["webpack:///webpack/bootstrap c9a2d098e6cc80181eb8","webpack:///./node_modules/most/src/Stream.js","webpack:///./node_modules/most/src/disposable/dispose.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/most/src/scheduler/Timeline.js","webpack:///./node_modules/most/src/combinator/thru.js","webpack:///./node_modules/most/src/source/fromEvent.js","webpack:///./node_modules/most/src/source/EventTargetSource.js","webpack:///./node_modules/most/src/source/EventEmitterSource.js","webpack:///./node_modules/most/src/sink/DeferredSink.js","webpack:///./node_modules/most/src/combinator/observe.js","webpack:///./node_modules/most/src/fusion/FilterMap.js","webpack:///./node_modules/most/src/combinator/loop.js","webpack:///./node_modules/most/src/combinator/accumulate.js","webpack:///./node_modules/most/src/source/unfold.js","webpack:///./node_modules/most/src/source/iterate.js","webpack:///./node_modules/most/src/source/generate.js","webpack:///./node_modules/most/src/combinator/build.js","webpack:///./node_modules/most/src/combinator/applicative.js","webpack:///./node_modules/most/src/combinator/transduce.js","webpack:///./node_modules/most/src/LinkedList.js","webpack:///./node_modules/most/src/combinator/concatMap.js","webpack:///./node_modules/most/src/combinator/merge.js","webpack:///./node_modules/most/src/combinator/sample.js","webpack:///./node_modules/most/src/combinator/zip.js","webpack:///./node_modules/most/src/Queue.js","webpack:///./node_modules/most/src/combinator/switch.js","webpack:///./node_modules/most/src/combinator/filter.js","webpack:///./node_modules/most/src/combinator/slice.js","webpack:///./node_modules/most/src/combinator/timeslice.js","webpack:///./node_modules/most/src/combinator/delay.js","webpack:///./node_modules/most/src/combinator/timestamp.js","webpack:///./node_modules/most/src/combinator/limit.js","webpack:///./node_modules/most/src/combinator/promises.js","webpack:///./node_modules/most/src/combinator/errors.js","webpack:///./node_modules/most/src/sink/SafeSink.js","webpack:///./node_modules/@most/create/dist/create.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/most/src/source/tryEvent.js","webpack:///./node_modules/most/src/combinator/transform.js","webpack:///./node_modules/d3-collection/index.js","webpack:///./node_modules/most/src/sink/Pipe.js","webpack:///./node_modules/most/src/fatalError.js","webpack:///./node_modules/most/src/scheduler/defaultScheduler.js","webpack:///./node_modules/most/src/task.js","webpack:///./node_modules/most/src/fusion/Map.js","webpack:///./node_modules/most/src/sink/IndexSink.js","webpack:///./node_modules/most/src/invoke.js","webpack:///./node_modules/most/src/combinator/mergeConcurrently.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/@most/prelude/dist/index.es.js","webpack:///./node_modules/most/src/index.js","webpack:///./node_modules/most/src/iterable.js","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./node_modules/most/src/runSource.js","webpack:///./node_modules/most/src/fusion/Filter.js","webpack:///./node_modules/most/src/combinator/continueWith.js","webpack:///./node_modules/most/src/combinator/combine.js","webpack:///./node_modules/most/src/combinator/flatMap.js","webpack:///./node_modules/most/src/scheduler/PropagateTask.js","webpack:///./node_modules/@most/multicast/dist/multicast.es.js","webpack:///./node_modules/most/src/source/core.js","webpack:///./src/dataSource.ts","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/most-w3msg/most-w3msg.js","webpack:///./node_modules/most/src/disposable/Disposable.js","webpack:///./node_modules/most/src/disposable/SettableDisposable.js","webpack:///./node_modules/most/src/Promise.js","webpack:///./node_modules/most/src/source/from.js","webpack:///./node_modules/most/src/source/fromArray.js","webpack:///./node_modules/most/src/source/fromIterable.js","webpack:///./node_modules/most/src/observable/getObservable.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./node_modules/most/src/observable/fromObservable.js","webpack:///./node_modules/most/src/source/periodic.js","webpack:///./node_modules/most/src/observable/subscribe.js","webpack:///./node_modules/most/src/scheduler/Scheduler.js","webpack:///./node_modules/most/src/scheduler/ScheduledTask.js","webpack:///./node_modules/most/src/scheduler/ClockTimer.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AC7DA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACVA;AAAA;AACA;AACA;AACA;AACA;AACoB;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B,YAAY,iBAAiB;AAC7B,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;;;;;;;;ACrHA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;ACpBA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA,iBAAiB,mBAAmB;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;;;;;;;;AC5HA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,yBAAyB;AACpC,WAAW,GAAG;AACd;AACA,aAAa,OAAO;AACpB;AACA;AACA,6CAAoD;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;;;;;;;;;;ACjCA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK,mCAAmC;AACxC;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,mGAA8C,2CAA2C;AACzF;;AAEA;AACA;AACA;AACA;;;;;;;;;;AC1CA;AAAA;AACA;AACA;;AAEgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC3FA;AAAA;AACA;AACA;;AAEsC;AACxB;;AAEd;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;AC3BA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC7BA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA,WAAW,2BAA2B,iBAAiB;AACvD,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;AChDA;AAAA;AACA;AACA;;AAEA;AACA;AAC4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,0BAA0B;AACpC,UAAU,EAAE;AACZ,UAAU,OAAO;AACjB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;ACxFA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB,8BAA8B,UAAU,8BAA8B,EAAE;AACrG;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtEA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;;;;;;;;;;ACjEA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACnEA;AAAA;AACA;AACA;;AAEyB;AACF;;AAEvB;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;AC1BA;AAAA;AACA;AACA;;AAEkB;AACF;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;;;;;;;;;ACnBA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,OAAO;AACjB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxHA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sDAAsD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sDAAsD;AAClE;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACzEA;AAAA;AACA;AACA;;AAE+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnBA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5FA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1GA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,SAAS;AACnB,UAAU,SAAS;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjIA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7GA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrEA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACjNA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/GA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AClDA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,oBAAoB;AAC1C;;;;;;;;;;;;;AC5BA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC1IA;AAAA;AACA;AACA;;AAEA;AACA;AACqB;;AAErB;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACtFA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;AC1FA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AChCA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;AAEzC;;AAEA,yBAAyB,4CAA4C;;AAErE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,qDAAqD;AACjF,4BAA4B,mDAAmD;AAC/E,8BAA8B,qDAAqD;;AAEnF;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,8EAA8E;;AAEtG;;AAEA,CAAC,G;;;;;;;;;ACzJD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,aAAa,kCAAkC,EAAE,EAAE;AACjG,wDAAwD,8BAA8B,EAAE;AACxF;;AAEA;AACA,6BAA6B,iDAAiD,EAAE;AAChF,0BAA0B,2CAA2C,EAAE;AACvE,8BAA8B,uDAAuD,EAAE;AACvF,sBAAsB,cAAc,aAAa,EAAE;AACnD,+BAA+B,mCAAmC,aAAa,EAAE;AACjF,iCAAiC,oBAAoB,aAAa,EAAE;AACpE,yBAAyB,YAAY,aAAa;AAClD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACxE+B;;AAE/B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0DAA0D,gBAAgB,EAAE;;AAE5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;;;;;;;;;;ACJA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;AClBA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,EAAE;AACZ,UAAU,OAAO;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,UAAU,gBAAgB;AAC1B;AACA,UAAU,OAAO;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9DwB;AACD;AACA;AACC;AACE;AACC;;;;;;;;;ACL3B;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACxBA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;ACRA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;ACVA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,cAAc;AAC1B,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;AChDA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD;;AAEA;;;;;;;;;AC7BA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChBA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC5HA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yEAAyE,8CAA8C;AACvH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+DAA+D,qBAAqB,EAAE;;AAEtF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChRA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AAC2B;AACZ;AACI;AACnB;;AAEA;AACA;AACA,UAAU;AACV;AACQ;;AAER;AACA;AACA;AACA;AACA;AACQ;;AAER;AACA;AACA;;AAEoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEe;;AAEf;AACA;AACA;AACA,YAAY,4BAA4B;AACxC;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,yBAAyB;AACpC;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACoB;;AAEpB;AACA;;AAEyB;;AAEjB;;AAER;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEe;;AAEP;;AAER;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA,WAAW,2BAA2B,iBAAiB;AACvD,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEuB;;AAEf;;AAER;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEiB;AACC;AACC;AACiB;;AAE5B;;AAER;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAE6B;AAChB;;AAEL;;AAER;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEoB;;AAEZ;;AAER;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEwB;;AAExB;AACQ;;AAER;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEuB;;AAEvB;AACQ;;AAER;AACA;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEoB;;AAEZ;;AAER;AACA;AACA;;AAEA;AACA;;AAE4B;;AAEpB;;AAER;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAE4B;;AAEpB;;AAER;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEgC;;AAExB;;AAER;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAE0C;;AAElC;;AAER;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEwB;;AAEhB;;AAER;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEuB;;AAEvB;AACQ;;AAER;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAE+C;;AAE/C;AACA;AACQ;;AAER;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,2BAA2B;AACtC,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAE6D;;AAErD;;AAER;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEuC;;AAEvC;AACA;AACQ;;AAER;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEgB;;AAER;;AAER;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEoB;AACZ;;AAER;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ,qBAAqB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAE6B;;AAErB;;AAER;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEqC;;AAErC;AACQ;;AAER;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEgD;;AAEhD;AACQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEQ;;AAER;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEQ;;AAER;AACA;;AAEQ;;;;;;;;;;;AClsBR;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;sDC1BA;AAAA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;;AAEA;AACA;;;;;;;;;;;;;AClBA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;AClDA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY,cAAc;AAC1B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9CA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9DA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,sBAAsB;AACjC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,sBAAsB;AAChC,UAAU,SAAS;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChHA;AAAA;AACA;AACA;;AAEkD;;AAElD;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,UAAU;AACvB;AACA;AACA;AACA;;;;;;;;;;ACzBA;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACrDoC;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,qCAAqC,6BAA6B;;AAElE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAE2B;AAC3B;;;;;;;;;;;;;;;;;;;;;;AC1GA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACnEA,yCAAmC;AAEnC,MAAM,GAAG,GAAG,mBAAO,CAAC,EAAY,CAAC,CAAC;AAClC,gDAA6C;AAO7C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK;AACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC;AAC7C,MAAM,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAOhE;IAII;QACI,IAAI,CAAC,gBAAgB,GAAG,EAAE;QAC1B,IAAI,CAAC,iBAAiB,GAAG,oBAAW,CAAC,GAAE,EAAE;YACrC,GAAG,EAAC,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC/C,CAAC;QACL,CAAC,EAAC,IAAI,CAAC;IACX,CAAC;IAEO,OAAO,CAAC,EAAG;QACf,EAAE,EAAC,EAAE,CAAC,CAAC,CAAC;YACJ,MAAM,CAAC,EAAC,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAC;QAChE,CAAC;QAAA,IAAI,CAAC,CAAC;YACH,MAAM,CAAC,EAAC,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAC;QACxE,CAAC;IACL,CAAC;IAEM,YAAY,CAAC,IAAU,EAAE,EAAQ;QACpC,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,SAAS,CAAC,OAAwB;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;QACzB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,OAAO;QAEpC,MAAM,CAAC,GAAE,EAAE;YACP,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;QACrC,CAAC;IACL,CAAC;CACJ;AAnCD,4CAmCC;AAED;IAOI,YAAY,MAAM;QACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE;QAChB,IAAI,CAAC,gBAAgB,GAAG,EAAE;QAE1B,IAAI,EAAE,GAAI,IAAI,SAAS,CAAC,8BAA8B,CAAC;QACvD,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,EAAE;YAChB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,EAAE,EAAC,iBAAiB,EAAC,CAAC,CAAC;QACnD,CAAC,CAAC;QAEF,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAE9C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAEjB,GAAG,CAAC,MAAM,CAAC;aAEX,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACd,GAAG,CAAC,CAAC,GAAE;YACJ,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACrD,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,GAAC,IAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,CAAC,CAAC;QACb,CAAC,CAAC;aACD,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAC,EAAE;YACb,EAAE,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,EAAC,IAAI,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC;YACnC,CAAC;YAAA,IAAI,CAAC,CAAC;gBACH,MAAM,CAAC,EAAC,IAAI,EAAC,EAAC,OAAO,EAAC,CAAC,CAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC,EAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC;YACnE,CAAC;QACL,CAAC,EAAC,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;aAE1E,MAAM,CAAC,CAAC,GAAE,CAAC,CAAC,IAAI,IAAI,CAAC;aAErB,GAAG,CAAC,CAAC,GAAE;YACJ,MAAM,CAAC,oBAAO,EAAE,CAAC,GAAG,CAAC,CAAC,GAAE,EAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,GAAE;gBAC9C,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,GAAC,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,GAAC,EAAC,CAAC,CAAC;gBAEzD,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM;YAClC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC;aAED,GAAG,CAAC,CAAC,CAAC,EAAC,EAAE;YACN,GAAG,EAAC,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC;YAClC,CAAC;QACL,CAAC,CAAC;QACF,kBAAkB;QAEtB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,EAAE;YAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;QAChD,CAAC,CAAC;IACN,CAAC;IAED,YAAY,CAAC,IAAU,EAAE,EAAQ;QAE/B,0BAA0B;QAC1B,IAAI,IAAI,GAAG,EAAE;QACb,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,CAAC,CAAC;QAE5D,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC;QAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YACxB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAE;YACjE,IAAI,GAAG,GAAG;gBACR,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACb;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACd,GAAG,GAAG,GAAG,GAAC,CAAC;QACb,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,SAAS,CAAC,OAAwB;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;QACzB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,OAAO;QAEpC,MAAM,CAAC,GAAE,EAAE;YACP,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;QACrC,CAAC;IACL,CAAC;CACJ;AAzFD,4DAyFC;;;;;;;;ACjJD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3DA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;ACzLD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;ACvLtC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,aAAa;AACxB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,WAAW,aAAa;AACxB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,yBAAyB;AACrC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC,WAAW,SAAS;AACpB,WAAW,cAAc;AACzB,WAAW,WAAW;AACtB,WAAW,kBAAkB;AAC7B,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,iBAAiB;AAC5B;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;AACF;;AAEA;;;;;;;;;;AC1KA;AAAA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACjBA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACvCA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACNA;AAAA;AACA;AACA;;AAEA;AACoB;AACC;AACE;AACvB;AACyB;AACH;;AAEtB,mBAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC/BA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC,sBAAsB;AACzD;AACA;;AAEA;AACA;;;;;;;;;;;;ACzBA;AAAA;AACA;AACA;;AAEA;AACsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;AC7BA;AAAA;AACA;AACA;;AAEA;;AAEA,4BAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;ACvBA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;;;;;;;;AChBA;AAAA;AACA;AACA;;AAEA;AACA;AAC2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC9CA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;ACzEA;AAAA;AACA;AACA;;AAEA;AACkB;;AAElB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uDAAuD;AACvD;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;AC/FA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;ACvBA;AAAA;AACA;AACA;;AAEgB;;AAEhB;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"datasource.dev.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 576);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c9a2d098e6cc80181eb8","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport default function Stream (source) {\r\n  this.source = source\r\n}\r\n\r\nStream.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(sink, scheduler)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/Stream.js\n// module id = 0\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\nimport Disposable from './Disposable'\r\nimport SettableDisposable from './SettableDisposable'\r\nimport { isPromise } from '../Promise'\r\nimport * as base from '@most/prelude'\r\n\r\nvar map = base.map\r\nvar identity = base.id\r\n\r\n/**\r\n * Call disposable.dispose.  If it returns a promise, catch promise\r\n * error and forward it through the provided sink.\r\n * @param {number} t time\r\n * @param {{dispose: function}} disposable\r\n * @param {{error: function}} sink\r\n * @return {*} result of disposable.dispose\r\n */\r\nexport function tryDispose (t, disposable, sink) {\r\n  var result = disposeSafely(disposable)\r\n  return isPromise(result)\r\n    ? result.catch(function (e) {\r\n      sink.error(t, e)\r\n    })\r\n    : result\r\n}\r\n\r\n/**\r\n * Create a new Disposable which will dispose its underlying resource\r\n * at most once.\r\n * @param {function} dispose function\r\n * @param {*?} data any data to be passed to disposer function\r\n * @return {Disposable}\r\n */\r\nexport function create (dispose, data) {\r\n  return once(new Disposable(dispose, data))\r\n}\r\n\r\n/**\r\n * Create a noop disposable. Can be used to satisfy a Disposable\r\n * requirement when no actual resource needs to be disposed.\r\n * @return {Disposable|exports|module.exports}\r\n */\r\nexport function empty () {\r\n  return new Disposable(identity, void 0)\r\n}\r\n\r\n/**\r\n * Create a disposable that will dispose all input disposables in parallel.\r\n * @param {Array<Disposable>} disposables\r\n * @return {Disposable}\r\n */\r\nexport function all (disposables) {\r\n  return create(disposeAll, disposables)\r\n}\r\n\r\nfunction disposeAll (disposables) {\r\n  return Promise.all(map(disposeSafely, disposables))\r\n}\r\n\r\nfunction disposeSafely (disposable) {\r\n  try {\r\n    return disposable.dispose()\r\n  } catch (e) {\r\n    return Promise.reject(e)\r\n  }\r\n}\r\n\r\n/**\r\n * Create a disposable from a promise for another disposable\r\n * @param {Promise<Disposable>} disposablePromise\r\n * @return {Disposable}\r\n */\r\nexport function promised (disposablePromise) {\r\n  return create(disposePromise, disposablePromise)\r\n}\r\n\r\nfunction disposePromise (disposablePromise) {\r\n  return disposablePromise.then(disposeOne)\r\n}\r\n\r\nfunction disposeOne (disposable) {\r\n  return disposable.dispose()\r\n}\r\n\r\n/**\r\n * Create a disposable proxy that allows its underlying disposable to\r\n * be set later.\r\n * @return {SettableDisposable}\r\n */\r\nexport function settable () {\r\n  return new SettableDisposable()\r\n}\r\n\r\n/**\r\n * Wrap an existing disposable (which may not already have been once()d)\r\n * so that it will only dispose its underlying resource at most once.\r\n * @param {{ dispose: function() }} disposable\r\n * @return {Disposable} wrapped disposable\r\n */\r\nexport function once (disposable) {\r\n  return new Disposable(disposeMemoized, memoized(disposable))\r\n}\r\n\r\nfunction disposeMemoized (memoized) {\r\n  if (!memoized.disposed) {\r\n    memoized.disposed = true\r\n    memoized.value = disposeSafely(memoized.disposable)\r\n    memoized.disposable = void 0\r\n  }\r\n\r\n  return memoized.value\r\n}\r\n\r\nfunction memoized (disposable) {\r\n  return { disposed: false, disposable: disposable, value: void 0 }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/disposable/dispose.js\n// module id = 1\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 10\n// module chunks = 0 1 2","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport * as base from '@most/prelude'\r\n\r\nexport default function Timeline () {\r\n  this.tasks = []\r\n}\r\n\r\nTimeline.prototype.nextArrival = function () {\r\n  return this.isEmpty() ? Infinity : this.tasks[0].time\r\n}\r\n\r\nTimeline.prototype.isEmpty = function () {\r\n  return this.tasks.length === 0\r\n}\r\n\r\nTimeline.prototype.add = function (st) {\r\n  insertByTime(st, this.tasks)\r\n}\r\n\r\nTimeline.prototype.remove = function (st) {\r\n  var i = binarySearch(st.time, this.tasks)\r\n\r\n  if (i >= 0 && i < this.tasks.length) {\r\n    var at = base.findIndex(st, this.tasks[i].events)\r\n    if (at >= 0) {\r\n      this.tasks[i].events.splice(at, 1)\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nTimeline.prototype.removeAll = function (f) {\r\n  for (var i = 0, l = this.tasks.length; i < l; ++i) {\r\n    removeAllFrom(f, this.tasks[i])\r\n  }\r\n}\r\n\r\nTimeline.prototype.runTasks = function (t, runTask) {\r\n  var tasks = this.tasks\r\n  var l = tasks.length\r\n  var i = 0\r\n\r\n  while (i < l && tasks[i].time <= t) {\r\n    ++i\r\n  }\r\n\r\n  this.tasks = tasks.slice(i)\r\n\r\n  // Run all ready tasks\r\n  for (var j = 0; j < i; ++j) {\r\n    this.tasks = runTasks(runTask, tasks[j], this.tasks)\r\n  }\r\n}\r\n\r\nfunction runTasks (runTask, timeslot, tasks) { // eslint-disable-line complexity\r\n  var events = timeslot.events\r\n  for (var i = 0; i < events.length; ++i) {\r\n    var task = events[i]\r\n\r\n    if (task.active) {\r\n      runTask(task)\r\n\r\n      // Reschedule periodic repeating tasks\r\n      // Check active again, since a task may have canceled itself\r\n      if (task.period >= 0 && task.active) {\r\n        task.time = task.time + task.period\r\n        insertByTime(task, tasks)\r\n      }\r\n    }\r\n  }\r\n\r\n  return tasks\r\n}\r\n\r\nfunction insertByTime (task, timeslots) { // eslint-disable-line complexity\r\n  var l = timeslots.length\r\n\r\n  if (l === 0) {\r\n    timeslots.push(newTimeslot(task.time, [task]))\r\n    return\r\n  }\r\n\r\n  var i = binarySearch(task.time, timeslots)\r\n\r\n  if (i >= l) {\r\n    timeslots.push(newTimeslot(task.time, [task]))\r\n  } else if (task.time === timeslots[i].time) {\r\n    timeslots[i].events.push(task)\r\n  } else {\r\n    timeslots.splice(i, 0, newTimeslot(task.time, [task]))\r\n  }\r\n}\r\n\r\nfunction removeAllFrom (f, timeslot) {\r\n  timeslot.events = base.removeAll(f, timeslot.events)\r\n}\r\n\r\nfunction binarySearch (t, sortedArray) { // eslint-disable-line complexity\r\n  var lo = 0\r\n  var hi = sortedArray.length\r\n  var mid, y\r\n\r\n  while (lo < hi) {\r\n    mid = Math.floor((lo + hi) / 2)\r\n    y = sortedArray[mid]\r\n\r\n    if (t === y.time) {\r\n      return mid\r\n    } else if (t < y.time) {\r\n      hi = mid\r\n    } else {\r\n      lo = mid + 1\r\n    }\r\n  }\r\n  return hi\r\n}\r\n\r\nfunction newTimeslot (t, events) {\r\n  return { time: t, events: events }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/scheduler/Timeline.js\n// module id = 100\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2017 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport function thru (f, stream) {\r\n  return f(stream)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/thru.js\n// module id = 101\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport EventTargetSource from './EventTargetSource'\r\nimport EventEmitterSource from './EventEmitterSource'\r\n\r\n/**\r\n * Create a stream from an EventTarget, such as a DOM Node, or EventEmitter.\r\n * @param {String} event event type name, e.g. 'click'\r\n * @param {EventTarget|EventEmitter} source EventTarget or EventEmitter\r\n * @param {*?} capture for DOM events, whether to use\r\n *  capturing--passed as 3rd parameter to addEventListener.\r\n * @returns {Stream} stream containing all events of the specified type\r\n * from the source.\r\n */\r\nexport function fromEvent (event, source, capture) { // eslint-disable-line complexity\r\n  var s\r\n\r\n  if (typeof source.addEventListener === 'function' && typeof source.removeEventListener === 'function') {\r\n    if (arguments.length < 3) {\r\n      capture = false\r\n    }\r\n\r\n    s = new EventTargetSource(event, source, capture)\r\n  } else if (typeof source.addListener === 'function' && typeof source.removeListener === 'function') {\r\n    s = new EventEmitterSource(event, source)\r\n  } else {\r\n    throw new Error('source must support addEventListener/removeEventListener or addListener/removeListener')\r\n  }\r\n\r\n  return new Stream(s)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/fromEvent.js\n// module id = 102\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport * as dispose from '../disposable/dispose'\r\nimport * as tryEvent from './tryEvent'\r\n\r\nexport default function EventTargetSource (event, source, capture) {\r\n  this.event = event\r\n  this.source = source\r\n  this.capture = capture\r\n}\r\n\r\nEventTargetSource.prototype.run = function (sink, scheduler) {\r\n  function addEvent (e) {\r\n    tryEvent.tryEvent(scheduler.now(), e, sink)\r\n  }\r\n\r\n  this.source.addEventListener(this.event, addEvent, this.capture)\r\n\r\n  return dispose.create(disposeEventTarget,\r\n    { target: this, addEvent: addEvent })\r\n}\r\n\r\nfunction disposeEventTarget (info) {\r\n  var target = info.target\r\n  target.source.removeEventListener(target.event, info.addEvent, target.capture)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/EventTargetSource.js\n// module id = 103\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport DeferredSink from '../sink/DeferredSink'\r\nimport * as dispose from '../disposable/dispose'\r\nimport * as tryEvent from './tryEvent'\r\n\r\nexport default function EventEmitterSource (event, source) {\r\n  this.event = event\r\n  this.source = source\r\n}\r\n\r\nEventEmitterSource.prototype.run = function (sink, scheduler) {\r\n  // NOTE: Because EventEmitter allows events in the same call stack as\r\n  // a listener is added, use a DeferredSink to buffer events\r\n  // until the stack clears, then propagate.  This maintains most.js's\r\n  // invariant that no event will be delivered in the same call stack\r\n  // as an observer begins observing.\r\n  var dsink = new DeferredSink(sink)\r\n\r\n  function addEventVariadic (a) {\r\n    var l = arguments.length\r\n    if (l > 1) {\r\n      var arr = new Array(l)\r\n      for (var i = 0; i < l; ++i) {\r\n        arr[i] = arguments[i]\r\n      }\r\n      tryEvent.tryEvent(scheduler.now(), arr, dsink)\r\n    } else {\r\n      tryEvent.tryEvent(scheduler.now(), a, dsink)\r\n    }\r\n  }\r\n\r\n  this.source.addListener(this.event, addEventVariadic)\r\n\r\n  return dispose.create(disposeEventEmitter, { target: this, addEvent: addEventVariadic })\r\n}\r\n\r\nfunction disposeEventEmitter (info) {\r\n  var target = info.target\r\n  target.source.removeListener(target.event, info.addEvent)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/EventEmitterSource.js\n// module id = 104\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport { defer } from '../task'\r\n\r\nexport default function DeferredSink (sink) {\r\n  this.sink = sink\r\n  this.events = []\r\n  this.active = true\r\n}\r\n\r\nDeferredSink.prototype.event = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n\r\n  if (this.events.length === 0) {\r\n    defer(new PropagateAllTask(this.sink, t, this.events))\r\n  }\r\n\r\n  this.events.push({ time: t, value: x })\r\n}\r\n\r\nDeferredSink.prototype.end = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n\r\n  this._end(new EndTask(t, x, this.sink))\r\n}\r\n\r\nDeferredSink.prototype.error = function (t, e) {\r\n  this._end(new ErrorTask(t, e, this.sink))\r\n}\r\n\r\nDeferredSink.prototype._end = function (task) {\r\n  this.active = false\r\n  defer(task)\r\n}\r\n\r\nfunction PropagateAllTask (sink, time, events) {\r\n  this.sink = sink\r\n  this.events = events\r\n  this.time = time\r\n}\r\n\r\nPropagateAllTask.prototype.run = function () {\r\n  var events = this.events\r\n  var sink = this.sink\r\n  var event\r\n\r\n  for (var i = 0, l = events.length; i < l; ++i) {\r\n    event = events[i]\r\n    this.time = event.time\r\n    sink.event(event.time, event.value)\r\n  }\r\n\r\n  events.length = 0\r\n}\r\n\r\nPropagateAllTask.prototype.error = function (e) {\r\n  this.sink.error(this.time, e)\r\n}\r\n\r\nfunction EndTask (t, x, sink) {\r\n  this.time = t\r\n  this.value = x\r\n  this.sink = sink\r\n}\r\n\r\nEndTask.prototype.run = function () {\r\n  this.sink.end(this.time, this.value)\r\n}\r\n\r\nEndTask.prototype.error = function (e) {\r\n  this.sink.error(this.time, e)\r\n}\r\n\r\nfunction ErrorTask (t, e, sink) {\r\n  this.time = t\r\n  this.value = e\r\n  this.sink = sink\r\n}\r\n\r\nErrorTask.prototype.run = function () {\r\n  this.sink.error(this.time, this.value)\r\n}\r\n\r\nErrorTask.prototype.error = function (e) {\r\n  throw e\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/sink/DeferredSink.js\n// module id = 105\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport { withDefaultScheduler as run } from '../runSource'\r\nimport { tap } from './transform'\r\n\r\n/**\r\n * Observe all the event values in the stream in time order. The\r\n * provided function `f` will be called for each event value\r\n * @param {function(x:T):*} f function to call with each event value\r\n * @param {Stream<T>} stream stream to observe\r\n * @return {Promise} promise that fulfills after the stream ends without\r\n *  an error, or rejects if the stream ends with an error.\r\n */\r\nexport function observe (f, stream) {\r\n  return drain(tap(f, stream))\r\n}\r\n\r\n/**\r\n * \"Run\" a stream by creating demand and consuming all events\r\n * @param {Stream<T>} stream stream to drain\r\n * @return {Promise} promise that fulfills after the stream ends without\r\n *  an error, or rejects if the stream ends with an error.\r\n */\r\nexport function drain (stream) {\r\n  return run(stream.source)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/observe.js\n// module id = 106\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Pipe from '../sink/Pipe'\r\n\r\nexport default function FilterMap (p, f, source) {\r\n  this.p = p\r\n  this.f = f\r\n  this.source = source\r\n}\r\n\r\nFilterMap.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new FilterMapSink(this.p, this.f, sink), scheduler)\r\n}\r\n\r\nfunction FilterMapSink (p, f, sink) {\r\n  this.p = p\r\n  this.f = f\r\n  this.sink = sink\r\n}\r\n\r\nFilterMapSink.prototype.event = function (t, x) {\r\n  var f = this.f\r\n  var p = this.p\r\n  p(x) && this.sink.event(t, f(x))\r\n}\r\n\r\nFilterMapSink.prototype.end = Pipe.prototype.end\r\nFilterMapSink.prototype.error = Pipe.prototype.error\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/fusion/FilterMap.js\n// module id = 107\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\n\r\n/**\r\n * Generalized feedback loop. Call a stepper function for each event. The stepper\r\n * will be called with 2 params: the current seed and the an event value.  It must\r\n * return a new { seed, value } pair. The `seed` will be fed back into the next\r\n * invocation of stepper, and the `value` will be propagated as the event value.\r\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\r\n * @param {*} seed initial seed value passed to first stepper call\r\n * @param {Stream} stream event stream\r\n * @returns {Stream} new stream whose values are the `value` field of the objects\r\n * returned by the stepper\r\n */\r\nexport function loop (stepper, seed, stream) {\r\n  return new Stream(new Loop(stepper, seed, stream.source))\r\n}\r\n\r\nfunction Loop (stepper, seed, source) {\r\n  this.step = stepper\r\n  this.seed = seed\r\n  this.source = source\r\n}\r\n\r\nLoop.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new LoopSink(this.step, this.seed, sink), scheduler)\r\n}\r\n\r\nfunction LoopSink (stepper, seed, sink) {\r\n  this.step = stepper\r\n  this.seed = seed\r\n  this.sink = sink\r\n}\r\n\r\nLoopSink.prototype.error = Pipe.prototype.error\r\n\r\nLoopSink.prototype.event = function (t, x) {\r\n  var result = this.step(this.seed, x)\r\n  this.seed = result.seed\r\n  this.sink.event(t, result.value)\r\n}\r\n\r\nLoopSink.prototype.end = function (t) {\r\n  this.sink.end(t, this.seed)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/loop.js\n// module id = 108\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport { withDefaultScheduler as runSource } from '../runSource'\r\nimport * as dispose from '../disposable/dispose'\r\nimport PropagateTask from '../scheduler/PropagateTask'\r\n\r\n/**\r\n * Create a stream containing successive reduce results of applying f to\r\n * the previous reduce result and the current stream item.\r\n * @param {function(result:*, x:*):*} f reducer function\r\n * @param {*} initial initial value\r\n * @param {Stream} stream stream to scan\r\n * @returns {Stream} new stream containing successive reduce results\r\n */\r\nexport function scan (f, initial, stream) {\r\n  return new Stream(new Scan(f, initial, stream.source))\r\n}\r\n\r\nfunction Scan (f, z, source) {\r\n  this.source = source\r\n  this.f = f\r\n  this.value = z\r\n}\r\n\r\nScan.prototype.run = function (sink, scheduler) {\r\n  var d1 = scheduler.asap(PropagateTask.event(this.value, sink))\r\n  var d2 = this.source.run(new ScanSink(this.f, this.value, sink), scheduler)\r\n  return dispose.all([d1, d2])\r\n}\r\n\r\nfunction ScanSink (f, z, sink) {\r\n  this.f = f\r\n  this.value = z\r\n  this.sink = sink\r\n}\r\n\r\nScanSink.prototype.event = function (t, x) {\r\n  var f = this.f\r\n  this.value = f(this.value, x)\r\n  this.sink.event(t, this.value)\r\n}\r\n\r\nScanSink.prototype.error = Pipe.prototype.error\r\nScanSink.prototype.end = Pipe.prototype.end\r\n\r\n/**\r\n* Reduce a stream to produce a single result.  Note that reducing an infinite\r\n* stream will return a Promise that never fulfills, but that may reject if an error\r\n* occurs.\r\n* @param {function(result:*, x:*):*} f reducer function\r\n* @param {*} initial initial value\r\n* @param {Stream} stream to reduce\r\n* @returns {Promise} promise for the file result of the reduce\r\n*/\r\nexport function reduce (f, initial, stream) {\r\n  return runSource(new Reduce(f, initial, stream.source))\r\n}\r\n\r\nfunction Reduce (f, z, source) {\r\n  this.source = source\r\n  this.f = f\r\n  this.value = z\r\n}\r\n\r\nReduce.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new ReduceSink(this.f, this.value, sink), scheduler)\r\n}\r\n\r\nfunction ReduceSink (f, z, sink) {\r\n  this.f = f\r\n  this.value = z\r\n  this.sink = sink\r\n}\r\n\r\nReduceSink.prototype.event = function (t, x) {\r\n  var f = this.f\r\n  this.value = f(this.value, x)\r\n  this.sink.event(t, this.value)\r\n}\r\n\r\nReduceSink.prototype.error = Pipe.prototype.error\r\n\r\nReduceSink.prototype.end = function (t) {\r\n  this.sink.end(t, this.value)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/accumulate.js\n// module id = 109\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\n\r\n/**\r\n * Compute a stream by unfolding tuples of future values from a seed value\r\n * Event times may be controlled by returning a Promise from f\r\n * @param {function(seed:*):{value:*, seed:*, done:boolean}|Promise<{value:*, seed:*, done:boolean}>} f unfolding function accepts\r\n *  a seed and returns a new tuple with a value, new seed, and boolean done flag.\r\n *  If tuple.done is true, the stream will end.\r\n * @param {*} seed seed value\r\n * @returns {Stream} stream containing all value of all tuples produced by the\r\n *  unfolding function.\r\n */\r\nexport function unfold (f, seed) {\r\n  return new Stream(new UnfoldSource(f, seed))\r\n}\r\n\r\nfunction UnfoldSource (f, seed) {\r\n  this.f = f\r\n  this.value = seed\r\n}\r\n\r\nUnfoldSource.prototype.run = function (sink, scheduler) {\r\n  return new Unfold(this.f, this.value, sink, scheduler)\r\n}\r\n\r\nfunction Unfold (f, x, sink, scheduler) {\r\n  this.f = f\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n  this.active = true\r\n\r\n  var self = this\r\n  function err (e) {\r\n    self.sink.error(self.scheduler.now(), e)\r\n  }\r\n\r\n  function start (unfold) {\r\n    return stepUnfold(unfold, x)\r\n  }\r\n\r\n  Promise.resolve(this).then(start).catch(err)\r\n}\r\n\r\nUnfold.prototype.dispose = function () {\r\n  this.active = false\r\n}\r\n\r\nfunction stepUnfold (unfold, x) {\r\n  var f = unfold.f\r\n  return Promise.resolve(f(x)).then(function (tuple) {\r\n    return continueUnfold(unfold, tuple)\r\n  })\r\n}\r\n\r\nfunction continueUnfold (unfold, tuple) {\r\n  if (tuple.done) {\r\n    unfold.sink.end(unfold.scheduler.now(), tuple.value)\r\n    return tuple.value\r\n  }\r\n\r\n  unfold.sink.event(unfold.scheduler.now(), tuple.value)\r\n\r\n  if (!unfold.active) {\r\n    return tuple.value\r\n  }\r\n  return stepUnfold(unfold, tuple.seed)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/unfold.js\n// module id = 110\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\n\r\n/**\r\n * Compute a stream by iteratively calling f to produce values\r\n * Event times may be controlled by returning a Promise from f\r\n * @param {function(x:*):*|Promise<*>} f\r\n * @param {*} x initial value\r\n * @returns {Stream}\r\n */\r\nexport function iterate (f, x) {\r\n  return new Stream(new IterateSource(f, x))\r\n}\r\n\r\nfunction IterateSource (f, x) {\r\n  this.f = f\r\n  this.value = x\r\n}\r\n\r\nIterateSource.prototype.run = function (sink, scheduler) {\r\n  return new Iterate(this.f, this.value, sink, scheduler)\r\n}\r\n\r\nfunction Iterate (f, initial, sink, scheduler) {\r\n  this.f = f\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n  this.active = true\r\n\r\n  var x = initial\r\n\r\n  var self = this\r\n  function err (e) {\r\n    self.sink.error(self.scheduler.now(), e)\r\n  }\r\n\r\n  function start (iterate) {\r\n    return stepIterate(iterate, x)\r\n  }\r\n\r\n  Promise.resolve(this).then(start).catch(err)\r\n}\r\n\r\nIterate.prototype.dispose = function () {\r\n  this.active = false\r\n}\r\n\r\nfunction stepIterate (iterate, x) {\r\n  iterate.sink.event(iterate.scheduler.now(), x)\r\n\r\n  if (!iterate.active) {\r\n    return x\r\n  }\r\n\r\n  var f = iterate.f\r\n  return Promise.resolve(f(x)).then(function (y) {\r\n    return continueIterate(iterate, y)\r\n  })\r\n}\r\n\r\nfunction continueIterate (iterate, x) {\r\n  return !iterate.active ? iterate.value : stepIterate(iterate, x)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/iterate.js\n// module id = 111\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2014 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport * as base from '@most/prelude'\r\n\r\n/**\r\n * Compute a stream using an *async* generator, which yields promises\r\n * to control event times.\r\n * @param f\r\n * @returns {Stream}\r\n */\r\nexport function generate (f /*, ...args */) {\r\n  return new Stream(new GenerateSource(f, base.tail(arguments)))\r\n}\r\n\r\nfunction GenerateSource (f, args) {\r\n  this.f = f\r\n  this.args = args\r\n}\r\n\r\nGenerateSource.prototype.run = function (sink, scheduler) {\r\n  return new Generate(this.f.apply(void 0, this.args), sink, scheduler)\r\n}\r\n\r\nfunction Generate (iterator, sink, scheduler) {\r\n  this.iterator = iterator\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n  this.active = true\r\n\r\n  var self = this\r\n  function err (e) {\r\n    self.sink.error(self.scheduler.now(), e)\r\n  }\r\n\r\n  Promise.resolve(this).then(next).catch(err)\r\n}\r\n\r\nfunction next (generate, x) {\r\n  return generate.active ? handle(generate, generate.iterator.next(x)) : x\r\n}\r\n\r\nfunction handle (generate, result) {\r\n  if (result.done) {\r\n    return generate.sink.end(generate.scheduler.now(), result.value)\r\n  }\r\n\r\n  return Promise.resolve(result.value).then(function (x) {\r\n    return emit(generate, x)\r\n  }, function (e) {\r\n    return error(generate, e)\r\n  })\r\n}\r\n\r\nfunction emit (generate, x) {\r\n  generate.sink.event(generate.scheduler.now(), x)\r\n  return next(generate, x)\r\n}\r\n\r\nfunction error (generate, e) {\r\n  return handle(generate, generate.iterator.throw(e))\r\n}\r\n\r\nGenerate.prototype.dispose = function () {\r\n  this.active = false\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/generate.js\n// module id = 112\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport { of as streamOf } from '../source/core'\r\nimport { continueWith } from './continueWith'\r\n\r\n/**\r\n * @param {*} x value to prepend\r\n * @param {Stream} stream\r\n * @returns {Stream} new stream with x prepended\r\n */\r\nexport function cons (x, stream) {\r\n  return concat(streamOf(x), stream)\r\n}\r\n\r\n/**\r\n* @param {Stream} left\r\n* @param {Stream} right\r\n* @returns {Stream} new stream containing all events in left followed by all\r\n*  events in right.  This *timeshifts* right to the end of left.\r\n*/\r\nexport function concat (left, right) {\r\n  return continueWith(function () {\r\n    return right\r\n  }, left)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/build.js\n// module id = 113\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport { combine } from './combine'\r\nimport { apply } from '@most/prelude'\r\n\r\n/**\r\n * Assume fs is a stream containing functions, and apply the latest function\r\n * in fs to the latest value in xs.\r\n * fs:         --f---------g--------h------>\r\n * xs:         -a-------b-------c-------d-->\r\n * ap(fs, xs): --fa-----fb-gb---gc--hc--hd->\r\n * @param {Stream} fs stream of functions to apply to the latest x\r\n * @param {Stream} xs stream of values to which to apply all the latest f\r\n * @returns {Stream} stream containing all the applications of fs to xs\r\n */\r\nexport function ap (fs, xs) {\r\n  return combine(apply, fs, xs)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/applicative.js\n// module id = 114\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\n\r\n/**\r\n * Transform a stream by passing its events through a transducer.\r\n * @param  {function} transducer transducer function\r\n * @param  {Stream} stream stream whose events will be passed through the\r\n *  transducer\r\n * @return {Stream} stream of events transformed by the transducer\r\n */\r\nexport function transduce (transducer, stream) {\r\n  return new Stream(new Transduce(transducer, stream.source))\r\n}\r\n\r\nfunction Transduce (transducer, source) {\r\n  this.transducer = transducer\r\n  this.source = source\r\n}\r\n\r\nTransduce.prototype.run = function (sink, scheduler) {\r\n  var xf = this.transducer(new Transformer(sink))\r\n  return this.source.run(new TransduceSink(getTxHandler(xf), sink), scheduler)\r\n}\r\n\r\nfunction TransduceSink (adapter, sink) {\r\n  this.xf = adapter\r\n  this.sink = sink\r\n}\r\n\r\nTransduceSink.prototype.event = function (t, x) {\r\n  var next = this.xf.step(t, x)\r\n\r\n  return this.xf.isReduced(next)\r\n    ? this.sink.end(t, this.xf.getResult(next))\r\n    : next\r\n}\r\n\r\nTransduceSink.prototype.end = function (t, x) {\r\n  return this.xf.result(x)\r\n}\r\n\r\nTransduceSink.prototype.error = function (t, e) {\r\n  return this.sink.error(t, e)\r\n}\r\n\r\nfunction Transformer (sink) {\r\n  this.time = -Infinity\r\n  this.sink = sink\r\n}\r\n\r\nTransformer.prototype['@@transducer/init'] = Transformer.prototype.init = function () {}\r\n\r\nTransformer.prototype['@@transducer/step'] = Transformer.prototype.step = function (t, x) {\r\n  if (!isNaN(t)) {\r\n    this.time = Math.max(t, this.time)\r\n  }\r\n  return this.sink.event(this.time, x)\r\n}\r\n\r\nTransformer.prototype['@@transducer/result'] = Transformer.prototype.result = function (x) {\r\n  return this.sink.end(this.time, x)\r\n}\r\n\r\n/**\r\n* Given an object supporting the new or legacy transducer protocol,\r\n* create an adapter for it.\r\n* @param {object} tx transform\r\n* @returns {TxAdapter|LegacyTxAdapter}\r\n*/\r\nfunction getTxHandler (tx) {\r\n  return typeof tx['@@transducer/step'] === 'function'\r\n    ? new TxAdapter(tx)\r\n    : new LegacyTxAdapter(tx)\r\n}\r\n\r\n/**\r\n* Adapter for new official transducer protocol\r\n* @param {object} tx transform\r\n* @constructor\r\n*/\r\nfunction TxAdapter (tx) {\r\n  this.tx = tx\r\n}\r\n\r\nTxAdapter.prototype.step = function (t, x) {\r\n  return this.tx['@@transducer/step'](t, x)\r\n}\r\nTxAdapter.prototype.result = function (x) {\r\n  return this.tx['@@transducer/result'](x)\r\n}\r\nTxAdapter.prototype.isReduced = function (x) {\r\n  return x != null && x['@@transducer/reduced']\r\n}\r\nTxAdapter.prototype.getResult = function (x) {\r\n  return x['@@transducer/value']\r\n}\r\n\r\n/**\r\n* Adapter for older transducer protocol\r\n* @param {object} tx transform\r\n* @constructor\r\n*/\r\nfunction LegacyTxAdapter (tx) {\r\n  this.tx = tx\r\n}\r\n\r\nLegacyTxAdapter.prototype.step = function (t, x) {\r\n  return this.tx.step(t, x)\r\n}\r\nLegacyTxAdapter.prototype.result = function (x) {\r\n  return this.tx.result(x)\r\n}\r\nLegacyTxAdapter.prototype.isReduced = function (x) {\r\n  return x != null && x.__transducers_reduced__\r\n}\r\nLegacyTxAdapter.prototype.getResult = function (x) {\r\n  return x.value\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/transduce.js\n// module id = 115\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\n/**\r\n * Doubly linked list\r\n * @constructor\r\n */\r\nexport default function LinkedList () {\r\n  this.head = null\r\n  this.length = 0\r\n}\r\n\r\n/**\r\n * Add a node to the end of the list\r\n * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to add\r\n */\r\nLinkedList.prototype.add = function (x) {\r\n  if (this.head !== null) {\r\n    this.head.prev = x\r\n    x.next = this.head\r\n  }\r\n  this.head = x\r\n  ++this.length\r\n}\r\n\r\n/**\r\n * Remove the provided node from the list\r\n * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to remove\r\n */\r\nLinkedList.prototype.remove = function (x) { // eslint-disable-line  complexity\r\n  --this.length\r\n  if (x === this.head) {\r\n    this.head = this.head.next\r\n  }\r\n  if (x.next !== null) {\r\n    x.next.prev = x.prev\r\n    x.next = null\r\n  }\r\n  if (x.prev !== null) {\r\n    x.prev.next = x.next\r\n    x.prev = null\r\n  }\r\n}\r\n\r\n/**\r\n * @returns {boolean} true iff there are no nodes in the list\r\n */\r\nLinkedList.prototype.isEmpty = function () {\r\n  return this.length === 0\r\n}\r\n\r\n/**\r\n * Dispose all nodes\r\n * @returns {Promise} promise that fulfills when all nodes have been disposed,\r\n *  or rejects if an error occurs while disposing\r\n */\r\nLinkedList.prototype.dispose = function () {\r\n  if (this.isEmpty()) {\r\n    return Promise.resolve()\r\n  }\r\n\r\n  var promises = []\r\n  var x = this.head\r\n  this.head = null\r\n  this.length = 0\r\n\r\n  while (x !== null) {\r\n    promises.push(x.dispose())\r\n    x = x.next\r\n  }\r\n\r\n  return Promise.all(promises)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/LinkedList.js\n// module id = 116\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport { mergeMapConcurrently } from './mergeConcurrently'\r\n\r\n/**\r\n * Map each value in stream to a new stream, and concatenate them all\r\n * stream:              -a---b---cX\r\n * f(a):                 1-1-1-1X\r\n * f(b):                        -2-2-2-2X\r\n * f(c):                                -3-3-3-3X\r\n * stream.concatMap(f): -1-1-1-1-2-2-2-2-3-3-3-3X\r\n * @param {function(x:*):Stream} f function to map each value to a stream\r\n * @param {Stream} stream\r\n * @returns {Stream} new stream containing all events from each stream returned by f\r\n */\r\nexport function concatMap (f, stream) {\r\n  return mergeMapConcurrently(f, 1, stream)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/concatMap.js\n// module id = 117\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport IndexSink from '../sink/IndexSink'\r\nimport { empty } from '../source/core'\r\nimport * as dispose from '../disposable/dispose'\r\nimport * as base from '@most/prelude'\r\n\r\nvar copy = base.copy\r\nvar reduce = base.reduce\r\n\r\n/**\r\n * @returns {Stream} stream containing events from all streams in the argument\r\n * list in time order.  If two events are simultaneous they will be merged in\r\n * arbitrary order.\r\n */\r\nexport function merge (/* ...streams */) {\r\n  return mergeArray(copy(arguments))\r\n}\r\n\r\n/**\r\n * @param {Array} streams array of stream to merge\r\n * @returns {Stream} stream containing events from all input observables\r\n * in time order.  If two events are simultaneous they will be merged in\r\n * arbitrary order.\r\n */\r\nexport function mergeArray (streams) {\r\n  var l = streams.length\r\n  return l === 0 ? empty()\r\n    : l === 1 ? streams[0]\r\n    : new Stream(mergeSources(streams))\r\n}\r\n\r\n/**\r\n * This implements fusion/flattening for merge.  It will\r\n * fuse adjacent merge operations.  For example:\r\n * - a.merge(b).merge(c) effectively becomes merge(a, b, c)\r\n * - merge(a, merge(b, c)) effectively becomes merge(a, b, c)\r\n * It does this by concatenating the sources arrays of\r\n * any nested Merge sources, in effect \"flattening\" nested\r\n * merge operations into a single merge.\r\n */\r\nfunction mergeSources (streams) {\r\n  return new Merge(reduce(appendSources, [], streams))\r\n}\r\n\r\nfunction appendSources (sources, stream) {\r\n  var source = stream.source\r\n  return source instanceof Merge\r\n    ? sources.concat(source.sources)\r\n    : sources.concat(source)\r\n}\r\n\r\nfunction Merge (sources) {\r\n  this.sources = sources\r\n}\r\n\r\nMerge.prototype.run = function (sink, scheduler) {\r\n  var l = this.sources.length\r\n  var disposables = new Array(l)\r\n  var sinks = new Array(l)\r\n\r\n  var mergeSink = new MergeSink(disposables, sinks, sink)\r\n\r\n  for (var indexSink, i = 0; i < l; ++i) {\r\n    indexSink = sinks[i] = new IndexSink(i, mergeSink)\r\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\r\n  }\r\n\r\n  return dispose.all(disposables)\r\n}\r\n\r\nfunction MergeSink (disposables, sinks, sink) {\r\n  this.sink = sink\r\n  this.disposables = disposables\r\n  this.activeCount = sinks.length\r\n}\r\n\r\nMergeSink.prototype.error = Pipe.prototype.error\r\n\r\nMergeSink.prototype.event = function (t, indexValue) {\r\n  this.sink.event(t, indexValue.value)\r\n}\r\n\r\nMergeSink.prototype.end = function (t, indexedValue) {\r\n  dispose.tryDispose(t, this.disposables[indexedValue.index], this.sink)\r\n  if (--this.activeCount === 0) {\r\n    this.sink.end(t, indexedValue.value)\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/merge.js\n// module id = 118\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport * as dispose from '../disposable/dispose'\r\nimport * as base from '@most/prelude'\r\nimport invoke from '../invoke'\r\n\r\n/**\r\n * When an event arrives on sampler, emit the result of calling f with the latest\r\n * values of all streams being sampled\r\n * @param {function(...values):*} f function to apply to each set of sampled values\r\n * @param {Stream} sampler streams will be sampled whenever an event arrives\r\n *  on sampler\r\n * @returns {Stream} stream of sampled and transformed values\r\n */\r\nexport function sample (f, sampler /*, ...streams */) {\r\n  return sampleArray(f, sampler, base.drop(2, arguments))\r\n}\r\n\r\n/**\r\n * When an event arrives on sampler, emit the latest event value from stream.\r\n * @param {Stream} sampler stream of events at whose arrival time\r\n *  stream's latest value will be propagated\r\n * @param {Stream} stream stream of values\r\n * @returns {Stream} sampled stream of values\r\n */\r\nexport function sampleWith (sampler, stream) {\r\n  return new Stream(new Sampler(base.id, sampler.source, [stream.source]))\r\n}\r\n\r\nexport function sampleArray (f, sampler, streams) {\r\n  return new Stream(new Sampler(f, sampler.source, base.map(getSource, streams)))\r\n}\r\n\r\nfunction getSource (stream) {\r\n  return stream.source\r\n}\r\n\r\nfunction Sampler (f, sampler, sources) {\r\n  this.f = f\r\n  this.sampler = sampler\r\n  this.sources = sources\r\n}\r\n\r\nSampler.prototype.run = function (sink, scheduler) {\r\n  var l = this.sources.length\r\n  var disposables = new Array(l + 1)\r\n  var sinks = new Array(l)\r\n\r\n  var sampleSink = new SampleSink(this.f, sinks, sink)\r\n\r\n  for (var hold, i = 0; i < l; ++i) {\r\n    hold = sinks[i] = new Hold(sampleSink)\r\n    disposables[i] = this.sources[i].run(hold, scheduler)\r\n  }\r\n\r\n  disposables[i] = this.sampler.run(sampleSink, scheduler)\r\n\r\n  return dispose.all(disposables)\r\n}\r\n\r\nfunction Hold (sink) {\r\n  this.sink = sink\r\n  this.hasValue = false\r\n}\r\n\r\nHold.prototype.event = function (t, x) {\r\n  this.value = x\r\n  this.hasValue = true\r\n  this.sink._notify(this)\r\n}\r\n\r\nHold.prototype.end = function () {}\r\nHold.prototype.error = Pipe.prototype.error\r\n\r\nfunction SampleSink (f, sinks, sink) {\r\n  this.f = f\r\n  this.sinks = sinks\r\n  this.sink = sink\r\n  this.active = false\r\n}\r\n\r\nSampleSink.prototype._notify = function () {\r\n  if (!this.active) {\r\n    this.active = this.sinks.every(hasValue)\r\n  }\r\n}\r\n\r\nSampleSink.prototype.event = function (t) {\r\n  if (this.active) {\r\n    this.sink.event(t, invoke(this.f, base.map(getValue, this.sinks)))\r\n  }\r\n}\r\n\r\nSampleSink.prototype.end = Pipe.prototype.end\r\nSampleSink.prototype.error = Pipe.prototype.error\r\n\r\nfunction hasValue (hold) {\r\n  return hold.hasValue\r\n}\r\n\r\nfunction getValue (hold) {\r\n  return hold.value\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/sample.js\n// module id = 119\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport * as transform from './transform'\r\nimport * as core from '../source/core'\r\nimport Pipe from '../sink/Pipe'\r\nimport IndexSink from '../sink/IndexSink'\r\nimport * as dispose from '../disposable/dispose'\r\nimport * as base from '@most/prelude'\r\nimport invoke from '../invoke'\r\nimport Queue from '../Queue'\r\n\r\nvar map = base.map\r\nvar tail = base.tail\r\n\r\n/**\r\n * Combine streams pairwise (or tuple-wise) by index by applying f to values\r\n * at corresponding indices.  The returned stream ends when any of the input\r\n * streams ends.\r\n * @param {function} f function to combine values\r\n * @returns {Stream} new stream with items at corresponding indices combined\r\n *  using f\r\n */\r\nexport function zip (f /*, ...streams */) {\r\n  return zipArray(f, tail(arguments))\r\n}\r\n\r\n/**\r\n* Combine streams pairwise (or tuple-wise) by index by applying f to values\r\n* at corresponding indices.  The returned stream ends when any of the input\r\n* streams ends.\r\n* @param {function} f function to combine values\r\n* @param {[Stream]} streams streams to zip using f\r\n* @returns {Stream} new stream with items at corresponding indices combined\r\n*  using f\r\n*/\r\nexport function zipArray (f, streams) {\r\n  return streams.length === 0 ? core.empty()\r\n: streams.length === 1 ? transform.map(f, streams[0])\r\n: new Stream(new Zip(f, map(getSource, streams)))\r\n}\r\n\r\nfunction getSource (stream) {\r\n  return stream.source\r\n}\r\n\r\nfunction Zip (f, sources) {\r\n  this.f = f\r\n  this.sources = sources\r\n}\r\n\r\nZip.prototype.run = function (sink, scheduler) {\r\n  var l = this.sources.length\r\n  var disposables = new Array(l)\r\n  var sinks = new Array(l)\r\n  var buffers = new Array(l)\r\n\r\n  var zipSink = new ZipSink(this.f, buffers, sinks, sink)\r\n\r\n  for (var indexSink, i = 0; i < l; ++i) {\r\n    buffers[i] = new Queue()\r\n    indexSink = sinks[i] = new IndexSink(i, zipSink)\r\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\r\n  }\r\n\r\n  return dispose.all(disposables)\r\n}\r\n\r\nfunction ZipSink (f, buffers, sinks, sink) {\r\n  this.f = f\r\n  this.sinks = sinks\r\n  this.sink = sink\r\n  this.buffers = buffers\r\n}\r\n\r\nZipSink.prototype.event = function (t, indexedValue) { // eslint-disable-line complexity\r\n  var buffers = this.buffers\r\n  var buffer = buffers[indexedValue.index]\r\n\r\n  buffer.push(indexedValue.value)\r\n\r\n  if (buffer.length() === 1) {\r\n    if (!ready(this.buffers)) {\r\n      return\r\n    }\r\n\r\n    emitZipped(this.f, t, buffers, this.sink)\r\n\r\n    if (ended(this.buffers, this.sinks)) {\r\n      this.sink.end(t, void 0)\r\n    }\r\n  }\r\n}\r\n\r\nZipSink.prototype.end = function (t, indexedValue) {\r\n  var buffer = this.buffers[indexedValue.index]\r\n  if (buffer.isEmpty()) {\r\n    this.sink.end(t, indexedValue.value)\r\n  }\r\n}\r\n\r\nZipSink.prototype.error = Pipe.prototype.error\r\n\r\nfunction emitZipped (f, t, buffers, sink) {\r\n  sink.event(t, invoke(f, map(head, buffers)))\r\n}\r\n\r\nfunction head (buffer) {\r\n  return buffer.shift()\r\n}\r\n\r\nfunction ended (buffers, sinks) {\r\n  for (var i = 0, l = buffers.length; i < l; ++i) {\r\n    if (buffers[i].isEmpty() && !sinks[i].active) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction ready (buffers) {\r\n  for (var i = 0, l = buffers.length; i < l; ++i) {\r\n    if (buffers[i].isEmpty()) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/zip.js\n// module id = 120\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\n// Based on https://github.com/petkaantonov/deque\r\n\r\nexport default function Queue (capPow2) {\r\n  this._capacity = capPow2 || 32\r\n  this._length = 0\r\n  this._head = 0\r\n}\r\n\r\nQueue.prototype.push = function (x) {\r\n  var len = this._length\r\n  this._checkCapacity(len + 1)\r\n\r\n  var i = (this._head + len) & (this._capacity - 1)\r\n  this[i] = x\r\n  this._length = len + 1\r\n}\r\n\r\nQueue.prototype.shift = function () {\r\n  var head = this._head\r\n  var x = this[head]\r\n\r\n  this[head] = void 0\r\n  this._head = (head + 1) & (this._capacity - 1)\r\n  this._length--\r\n  return x\r\n}\r\n\r\nQueue.prototype.isEmpty = function () {\r\n  return this._length === 0\r\n}\r\n\r\nQueue.prototype.length = function () {\r\n  return this._length\r\n}\r\n\r\nQueue.prototype._checkCapacity = function (size) {\r\n  if (this._capacity < size) {\r\n    this._ensureCapacity(this._capacity << 1)\r\n  }\r\n}\r\n\r\nQueue.prototype._ensureCapacity = function (capacity) {\r\n  var oldCapacity = this._capacity\r\n  this._capacity = capacity\r\n\r\n  var last = this._head + this._length\r\n\r\n  if (last > oldCapacity) {\r\n    copy(this, 0, this, oldCapacity, last & (oldCapacity - 1))\r\n  }\r\n}\r\n\r\nfunction copy (src, srcIndex, dst, dstIndex, len) {\r\n  for (var j = 0; j < len; ++j) {\r\n    dst[j + dstIndex] = src[j + srcIndex]\r\n    src[j + srcIndex] = void 0\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/Queue.js\n// module id = 121\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport * as dispose from '../disposable/dispose'\r\n\r\n/**\r\n * Given a stream of streams, return a new stream that adopts the behavior\r\n * of the most recent inner stream.\r\n * @param {Stream} stream of streams on which to switch\r\n * @returns {Stream} switching stream\r\n */\r\nexport function switchLatest (stream) {\r\n  return new Stream(new Switch(stream.source))\r\n}\r\n\r\nexport { switchLatest as switch }\r\n\r\nfunction Switch (source) {\r\n  this.source = source\r\n}\r\n\r\nSwitch.prototype.run = function (sink, scheduler) {\r\n  var switchSink = new SwitchSink(sink, scheduler)\r\n  return dispose.all([switchSink, this.source.run(switchSink, scheduler)])\r\n}\r\n\r\nfunction SwitchSink (sink, scheduler) {\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n  this.current = null\r\n  this.ended = false\r\n}\r\n\r\nSwitchSink.prototype.event = function (t, stream) {\r\n  this._disposeCurrent(t) // TODO: capture the result of this dispose\r\n  this.current = new Segment(t, Infinity, this, this.sink)\r\n  this.current.disposable = stream.source.run(this.current, this.scheduler)\r\n}\r\n\r\nSwitchSink.prototype.end = function (t, x) {\r\n  this.ended = true\r\n  this._checkEnd(t, x)\r\n}\r\n\r\nSwitchSink.prototype.error = function (t, e) {\r\n  this.ended = true\r\n  this.sink.error(t, e)\r\n}\r\n\r\nSwitchSink.prototype.dispose = function () {\r\n  return this._disposeCurrent(this.scheduler.now())\r\n}\r\n\r\nSwitchSink.prototype._disposeCurrent = function (t) {\r\n  if (this.current !== null) {\r\n    return this.current._dispose(t)\r\n  }\r\n}\r\n\r\nSwitchSink.prototype._disposeInner = function (t, inner) {\r\n  inner._dispose(t) // TODO: capture the result of this dispose\r\n  if (inner === this.current) {\r\n    this.current = null\r\n  }\r\n}\r\n\r\nSwitchSink.prototype._checkEnd = function (t, x) {\r\n  if (this.ended && this.current === null) {\r\n    this.sink.end(t, x)\r\n  }\r\n}\r\n\r\nSwitchSink.prototype._endInner = function (t, x, inner) {\r\n  this._disposeInner(t, inner)\r\n  this._checkEnd(t, x)\r\n}\r\n\r\nSwitchSink.prototype._errorInner = function (t, e, inner) {\r\n  this._disposeInner(t, inner)\r\n  this.sink.error(t, e)\r\n}\r\n\r\nfunction Segment (min, max, outer, sink) {\r\n  this.min = min\r\n  this.max = max\r\n  this.outer = outer\r\n  this.sink = sink\r\n  this.disposable = dispose.empty()\r\n}\r\n\r\nSegment.prototype.event = function (t, x) {\r\n  if (t < this.max) {\r\n    this.sink.event(Math.max(t, this.min), x)\r\n  }\r\n}\r\n\r\nSegment.prototype.end = function (t, x) {\r\n  this.outer._endInner(Math.max(t, this.min), x, this)\r\n}\r\n\r\nSegment.prototype.error = function (t, e) {\r\n  this.outer._errorInner(Math.max(t, this.min), e, this)\r\n}\r\n\r\nSegment.prototype._dispose = function (t) {\r\n  this.max = t\r\n  dispose.tryDispose(t, this.disposable, this.sink)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/switch.js\n// module id = 122\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport Filter from '../fusion/Filter'\r\n\r\n/**\r\n * Retain only items matching a predicate\r\n * @param {function(x:*):boolean} p filtering predicate called for each item\r\n * @param {Stream} stream stream to filter\r\n * @returns {Stream} stream containing only items for which predicate returns truthy\r\n */\r\nexport function filter (p, stream) {\r\n  return new Stream(Filter.create(p, stream.source))\r\n}\r\n\r\n/**\r\n * Skip repeated events, using === to detect duplicates\r\n * @param {Stream} stream stream from which to omit repeated events\r\n * @returns {Stream} stream without repeated events\r\n */\r\nexport function skipRepeats (stream) {\r\n  return skipRepeatsWith(same, stream)\r\n}\r\n\r\n/**\r\n * Skip repeated events using the provided equals function to detect duplicates\r\n * @param {function(a:*, b:*):boolean} equals optional function to compare items\r\n * @param {Stream} stream stream from which to omit repeated events\r\n * @returns {Stream} stream without repeated events\r\n */\r\nexport function skipRepeatsWith (equals, stream) {\r\n  return new Stream(new SkipRepeats(equals, stream.source))\r\n}\r\n\r\nfunction SkipRepeats (equals, source) {\r\n  this.equals = equals\r\n  this.source = source\r\n}\r\n\r\nSkipRepeats.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new SkipRepeatsSink(this.equals, sink), scheduler)\r\n}\r\n\r\nfunction SkipRepeatsSink (equals, sink) {\r\n  this.equals = equals\r\n  this.sink = sink\r\n  this.value = void 0\r\n  this.init = true\r\n}\r\n\r\nSkipRepeatsSink.prototype.end = Pipe.prototype.end\r\nSkipRepeatsSink.prototype.error = Pipe.prototype.error\r\n\r\nSkipRepeatsSink.prototype.event = function (t, x) {\r\n  if (this.init) {\r\n    this.init = false\r\n    this.value = x\r\n    this.sink.event(t, x)\r\n  } else if (!this.equals(this.value, x)) {\r\n    this.value = x\r\n    this.sink.event(t, x)\r\n  }\r\n}\r\n\r\nfunction same (a, b) {\r\n  return a === b\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/filter.js\n// module id = 123\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport * as core from '../source/core'\r\nimport * as dispose from '../disposable/dispose'\r\nimport Map from '../fusion/Map'\r\n\r\n/**\r\n * @param {number} n\r\n * @param {Stream} stream\r\n * @returns {Stream} new stream containing only up to the first n items from stream\r\n */\r\nexport function take (n, stream) {\r\n  return slice(0, n, stream)\r\n}\r\n\r\n/**\r\n * @param {number} n\r\n * @param {Stream} stream\r\n * @returns {Stream} new stream with the first n items removed\r\n */\r\nexport function skip (n, stream) {\r\n  return slice(n, Infinity, stream)\r\n}\r\n\r\n/**\r\n * Slice a stream by index. Negative start/end indexes are not supported\r\n * @param {number} start\r\n * @param {number} end\r\n * @param {Stream} stream\r\n * @returns {Stream} stream containing items where start <= index < end\r\n */\r\nexport function slice (start, end, stream) {\r\n  return end <= start ? core.empty()\r\n    : new Stream(sliceSource(start, end, stream.source))\r\n}\r\n\r\nfunction sliceSource (start, end, source) {\r\n  return source instanceof Map ? commuteMapSlice(start, end, source)\r\n    : source instanceof Slice ? fuseSlice(start, end, source)\r\n    : new Slice(start, end, source)\r\n}\r\n\r\nfunction commuteMapSlice (start, end, source) {\r\n  return Map.create(source.f, sliceSource(start, end, source.source))\r\n}\r\n\r\nfunction fuseSlice (start, end, source) {\r\n  start += source.min\r\n  end = Math.min(end + source.min, source.max)\r\n  return new Slice(start, end, source.source)\r\n}\r\n\r\nfunction Slice (min, max, source) {\r\n  this.source = source\r\n  this.min = min\r\n  this.max = max\r\n}\r\n\r\nSlice.prototype.run = function (sink, scheduler) {\r\n  var disposable = dispose.settable()\r\n  var sliceSink = new SliceSink(this.min, this.max - this.min, sink, disposable)\r\n\r\n  disposable.setDisposable(this.source.run(sliceSink, scheduler))\r\n  return disposable\r\n}\r\n\r\nfunction SliceSink (skip, take, sink, disposable) {\r\n  this.sink = sink\r\n  this.skip = skip\r\n  this.take = take\r\n  this.disposable = disposable\r\n}\r\n\r\nSliceSink.prototype.end = Pipe.prototype.end\r\nSliceSink.prototype.error = Pipe.prototype.error\r\n\r\nSliceSink.prototype.event = function (t, x) {\r\n  /* eslint complexity: [1, 4] */\r\n  if (this.skip > 0) {\r\n    this.skip -= 1\r\n    return\r\n  }\r\n\r\n  if (this.take === 0) {\r\n    return\r\n  }\r\n\r\n  this.take -= 1\r\n  this.sink.event(t, x)\r\n  if (this.take === 0) {\r\n    this.disposable.dispose()\r\n    this.sink.end(t, x)\r\n  }\r\n}\r\n\r\nexport function takeWhile (p, stream) {\r\n  return new Stream(new TakeWhile(p, stream.source))\r\n}\r\n\r\nfunction TakeWhile (p, source) {\r\n  this.p = p\r\n  this.source = source\r\n}\r\n\r\nTakeWhile.prototype.run = function (sink, scheduler) {\r\n  var disposable = dispose.settable()\r\n  var takeWhileSink = new TakeWhileSink(this.p, sink, disposable)\r\n\r\n  disposable.setDisposable(this.source.run(takeWhileSink, scheduler))\r\n  return disposable\r\n}\r\n\r\nfunction TakeWhileSink (p, sink, disposable) {\r\n  this.p = p\r\n  this.sink = sink\r\n  this.active = true\r\n  this.disposable = disposable\r\n}\r\n\r\nTakeWhileSink.prototype.end = Pipe.prototype.end\r\nTakeWhileSink.prototype.error = Pipe.prototype.error\r\n\r\nTakeWhileSink.prototype.event = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n\r\n  var p = this.p\r\n  this.active = p(x)\r\n  if (this.active) {\r\n    this.sink.event(t, x)\r\n  } else {\r\n    this.disposable.dispose()\r\n    this.sink.end(t, x)\r\n  }\r\n}\r\n\r\nexport function skipWhile (p, stream) {\r\n  return new Stream(new SkipWhile(p, stream.source))\r\n}\r\n\r\nfunction SkipWhile (p, source) {\r\n  this.p = p\r\n  this.source = source\r\n}\r\n\r\nSkipWhile.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new SkipWhileSink(this.p, sink), scheduler)\r\n}\r\n\r\nfunction SkipWhileSink (p, sink) {\r\n  this.p = p\r\n  this.sink = sink\r\n  this.skipping = true\r\n}\r\n\r\nSkipWhileSink.prototype.end = Pipe.prototype.end\r\nSkipWhileSink.prototype.error = Pipe.prototype.error\r\n\r\nSkipWhileSink.prototype.event = function (t, x) {\r\n  if (this.skipping) {\r\n    var p = this.p\r\n    this.skipping = p(x)\r\n    if (this.skipping) {\r\n      return\r\n    }\r\n  }\r\n\r\n  this.sink.event(t, x)\r\n}\r\n\r\nexport function skipAfter (p, stream) {\r\n  return new Stream(new SkipAfter(p, stream.source))\r\n}\r\n\r\nfunction SkipAfter (p, source) {\r\n  this.p = p\r\n  this.source = source\r\n}\r\n\r\nSkipAfter.prototype.run = function run (sink, scheduler) {\r\n  return this.source.run(new SkipAfterSink(this.p, sink), scheduler)\r\n}\r\n\r\nfunction SkipAfterSink (p, sink) {\r\n  this.p = p\r\n  this.sink = sink\r\n  this.skipping = false\r\n}\r\n\r\nSkipAfterSink.prototype.event = function event (t, x) {\r\n  if (this.skipping) {\r\n    return\r\n  }\r\n\r\n  var p = this.p\r\n  this.skipping = p(x)\r\n  this.sink.event(t, x)\r\n\r\n  if (this.skipping) {\r\n    this.sink.end(t, x)\r\n  }\r\n}\r\n\r\nSkipAfterSink.prototype.end = Pipe.prototype.end\r\nSkipAfterSink.prototype.error = Pipe.prototype.error\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/slice.js\n// module id = 124\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport * as dispose from '../disposable/dispose'\r\nimport { join } from '../combinator/flatMap'\r\n\r\nexport function takeUntil (signal, stream) {\r\n  return new Stream(new Until(signal.source, stream.source))\r\n}\r\n\r\nexport function skipUntil (signal, stream) {\r\n  return new Stream(new Since(signal.source, stream.source))\r\n}\r\n\r\nexport function during (timeWindow, stream) {\r\n  return takeUntil(join(timeWindow), skipUntil(timeWindow, stream))\r\n}\r\n\r\nfunction Until (maxSignal, source) {\r\n  this.maxSignal = maxSignal\r\n  this.source = source\r\n}\r\n\r\nUntil.prototype.run = function (sink, scheduler) {\r\n  var min = new Bound(-Infinity, sink)\r\n  var max = new UpperBound(this.maxSignal, sink, scheduler)\r\n  var disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\r\n\r\n  return dispose.all([min, max, disposable])\r\n}\r\n\r\nfunction Since (minSignal, source) {\r\n  this.minSignal = minSignal\r\n  this.source = source\r\n}\r\n\r\nSince.prototype.run = function (sink, scheduler) {\r\n  var min = new LowerBound(this.minSignal, sink, scheduler)\r\n  var max = new Bound(Infinity, sink)\r\n  var disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\r\n\r\n  return dispose.all([min, max, disposable])\r\n}\r\n\r\nfunction Bound (value, sink) {\r\n  this.value = value\r\n  this.sink = sink\r\n}\r\n\r\nBound.prototype.error = Pipe.prototype.error\r\nBound.prototype.event = noop\r\nBound.prototype.end = noop\r\nBound.prototype.dispose = noop\r\n\r\nfunction TimeWindowSink (min, max, sink) {\r\n  this.min = min\r\n  this.max = max\r\n  this.sink = sink\r\n}\r\n\r\nTimeWindowSink.prototype.event = function (t, x) {\r\n  if (t >= this.min.value && t < this.max.value) {\r\n    this.sink.event(t, x)\r\n  }\r\n}\r\n\r\nTimeWindowSink.prototype.error = Pipe.prototype.error\r\nTimeWindowSink.prototype.end = Pipe.prototype.end\r\n\r\nfunction LowerBound (signal, sink, scheduler) {\r\n  this.value = Infinity\r\n  this.sink = sink\r\n  this.disposable = signal.run(this, scheduler)\r\n}\r\n\r\nLowerBound.prototype.event = function (t /*, x */) {\r\n  if (t < this.value) {\r\n    this.value = t\r\n  }\r\n}\r\n\r\nLowerBound.prototype.end = noop\r\nLowerBound.prototype.error = Pipe.prototype.error\r\n\r\nLowerBound.prototype.dispose = function () {\r\n  return this.disposable.dispose()\r\n}\r\n\r\nfunction UpperBound (signal, sink, scheduler) {\r\n  this.value = Infinity\r\n  this.sink = sink\r\n  this.disposable = signal.run(this, scheduler)\r\n}\r\n\r\nUpperBound.prototype.event = function (t, x) {\r\n  if (t < this.value) {\r\n    this.value = t\r\n    this.sink.end(t, x)\r\n  }\r\n}\r\n\r\nUpperBound.prototype.end = noop\r\nUpperBound.prototype.error = Pipe.prototype.error\r\n\r\nUpperBound.prototype.dispose = function () {\r\n  return this.disposable.dispose()\r\n}\r\n\r\nfunction noop () {}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/timeslice.js\n// module id = 125\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport * as dispose from '../disposable/dispose'\r\nimport PropagateTask from '../scheduler/PropagateTask'\r\n\r\n/**\r\n * @param {Number} delayTime milliseconds to delay each item\r\n * @param {Stream} stream\r\n * @returns {Stream} new stream containing the same items, but delayed by ms\r\n */\r\nexport function delay (delayTime, stream) {\r\n  return delayTime <= 0 ? stream\r\n    : new Stream(new Delay(delayTime, stream.source))\r\n}\r\n\r\nfunction Delay (dt, source) {\r\n  this.dt = dt\r\n  this.source = source\r\n}\r\n\r\nDelay.prototype.run = function (sink, scheduler) {\r\n  var delaySink = new DelaySink(this.dt, sink, scheduler)\r\n  return dispose.all([delaySink, this.source.run(delaySink, scheduler)])\r\n}\r\n\r\nfunction DelaySink (dt, sink, scheduler) {\r\n  this.dt = dt\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n}\r\n\r\nDelaySink.prototype.dispose = function () {\r\n  var self = this\r\n  this.scheduler.cancelAll(function (scheduledTask) {\r\n    return scheduledTask.task.sink === self.sink\r\n  })\r\n}\r\n\r\nDelaySink.prototype.event = function (t, x) {\r\n  this.scheduler.delay(this.dt, PropagateTask.event(x, this.sink))\r\n}\r\n\r\nDelaySink.prototype.end = function (t, x) {\r\n  this.scheduler.delay(this.dt, PropagateTask.end(x, this.sink))\r\n}\r\n\r\nDelaySink.prototype.error = Pipe.prototype.error\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/delay.js\n// module id = 126\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\n\r\nexport function timestamp (stream) {\r\n  return new Stream(new Timestamp(stream.source))\r\n}\r\n\r\nfunction Timestamp (source) {\r\n  this.source = source\r\n}\r\n\r\nTimestamp.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new TimestampSink(sink), scheduler)\r\n}\r\n\r\nfunction TimestampSink (sink) {\r\n  this.sink = sink\r\n}\r\n\r\nTimestampSink.prototype.end = Pipe.prototype.end\r\nTimestampSink.prototype.error = Pipe.prototype.error\r\n\r\nTimestampSink.prototype.event = function (t, x) {\r\n  this.sink.event(t, { time: t, value: x })\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/timestamp.js\n// module id = 127\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport Map from '../fusion/Map'\r\n\r\n/**\r\n * Limit the rate of events by suppressing events that occur too often\r\n * @param {Number} period time to suppress events\r\n * @param {Stream} stream\r\n * @returns {Stream}\r\n */\r\nexport function throttle (period, stream) {\r\n  return new Stream(throttleSource(period, stream.source))\r\n}\r\n\r\nfunction throttleSource (period, source) {\r\n  return source instanceof Map ? commuteMapThrottle(period, source)\r\n    : source instanceof Throttle ? fuseThrottle(period, source)\r\n    : new Throttle(period, source)\r\n}\r\n\r\nfunction commuteMapThrottle (period, source) {\r\n  return Map.create(source.f, throttleSource(period, source.source))\r\n}\r\n\r\nfunction fuseThrottle (period, source) {\r\n  return new Throttle(Math.max(period, source.period), source.source)\r\n}\r\n\r\nfunction Throttle (period, source) {\r\n  this.period = period\r\n  this.source = source\r\n}\r\n\r\nThrottle.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new ThrottleSink(this.period, sink), scheduler)\r\n}\r\n\r\nfunction ThrottleSink (period, sink) {\r\n  this.time = 0\r\n  this.period = period\r\n  this.sink = sink\r\n}\r\n\r\nThrottleSink.prototype.event = function (t, x) {\r\n  if (t >= this.time) {\r\n    this.time = t + this.period\r\n    this.sink.event(t, x)\r\n  }\r\n}\r\n\r\nThrottleSink.prototype.end = Pipe.prototype.end\r\n\r\nThrottleSink.prototype.error = Pipe.prototype.error\r\n\r\n/**\r\n * Wait for a burst of events to subside and emit only the last event in the burst\r\n * @param {Number} period events occuring more frequently than this\r\n *  will be suppressed\r\n * @param {Stream} stream stream to debounce\r\n * @returns {Stream} new debounced stream\r\n */\r\nexport function debounce (period, stream) {\r\n  return new Stream(new Debounce(period, stream.source))\r\n}\r\n\r\nfunction Debounce (dt, source) {\r\n  this.dt = dt\r\n  this.source = source\r\n}\r\n\r\nDebounce.prototype.run = function (sink, scheduler) {\r\n  return new DebounceSink(this.dt, this.source, sink, scheduler)\r\n}\r\n\r\nfunction DebounceSink (dt, source, sink, scheduler) {\r\n  this.dt = dt\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n  this.value = void 0\r\n  this.timer = null\r\n  this.disposable = source.run(this, scheduler)\r\n}\r\n\r\nDebounceSink.prototype.event = function (t, x) {\r\n  this._clearTimer()\r\n  this.value = x\r\n  this.timer = this.scheduler.delay(this.dt, new DebounceTask(this, x))\r\n}\r\n\r\nDebounceSink.prototype._event = function (t, x) {\r\n  this._clearTimer()\r\n  this.sink.event(t, x)\r\n}\r\n\r\nDebounceSink.prototype.end = function (t, x) {\r\n  if (this._clearTimer()) {\r\n    this.sink.event(t, this.value)\r\n    this.value = void 0\r\n  }\r\n  this.sink.end(t, x)\r\n}\r\n\r\nDebounceSink.prototype.error = function (t, x) {\r\n  this._clearTimer()\r\n  this.sink.error(t, x)\r\n}\r\n\r\nDebounceSink.prototype.dispose = function () {\r\n  this._clearTimer()\r\n  return this.disposable.dispose()\r\n}\r\n\r\nDebounceSink.prototype._clearTimer = function () {\r\n  if (this.timer === null) {\r\n    return false\r\n  }\r\n  this.timer.dispose()\r\n  this.timer = null\r\n  return true\r\n}\r\n\r\nfunction DebounceTask (debounce, value) {\r\n  this.debounce = debounce\r\n  this.value = value\r\n}\r\n\r\nDebounceTask.prototype.run = function (t) {\r\n  this.debounce._event(t, this.value)\r\n}\r\n\r\nDebounceTask.prototype.error = function (t, e) {\r\n  this.debounce.error(t, e)\r\n}\r\n\r\nDebounceTask.prototype.dispose = function () {}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/limit.js\n// module id = 128\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport fatal from '../fatalError'\r\nimport { of as just } from '../source/core'\r\n\r\n/**\r\n * Create a stream containing only the promise's fulfillment\r\n * value at the time it fulfills.\r\n * @param {Promise<T>} p promise\r\n * @return {Stream<T>} stream containing promise's fulfillment value.\r\n *  If the promise rejects, the stream will error\r\n */\r\nexport function fromPromise (p) {\r\n  return awaitPromises(just(p))\r\n}\r\n\r\n/**\r\n * Turn a Stream<Promise<T>> into Stream<T> by awaiting each promise.\r\n * Event order is preserved.\r\n * @param {Stream<Promise<T>>} stream\r\n * @return {Stream<T>} stream of fulfillment values.  The stream will\r\n * error if any promise rejects.\r\n */\r\nexport function awaitPromises (stream) {\r\n  return new Stream(new Await(stream.source))\r\n}\r\n\r\nfunction Await (source) {\r\n  this.source = source\r\n}\r\n\r\nAwait.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new AwaitSink(sink, scheduler), scheduler)\r\n}\r\n\r\nfunction AwaitSink (sink, scheduler) {\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n  this.queue = Promise.resolve()\r\n  var self = this\r\n\r\n  // Pre-create closures, to avoid creating them per event\r\n  this._eventBound = function (x) {\r\n    self.sink.event(self.scheduler.now(), x)\r\n  }\r\n\r\n  this._endBound = function (x) {\r\n    self.sink.end(self.scheduler.now(), x)\r\n  }\r\n\r\n  this._errorBound = function (e) {\r\n    self.sink.error(self.scheduler.now(), e)\r\n  }\r\n}\r\n\r\nAwaitSink.prototype.event = function (t, promise) {\r\n  var self = this\r\n  this.queue = this.queue.then(function () {\r\n    return self._event(promise)\r\n  }).catch(this._errorBound)\r\n}\r\n\r\nAwaitSink.prototype.end = function (t, x) {\r\n  var self = this\r\n  this.queue = this.queue.then(function () {\r\n    return self._end(x)\r\n  }).catch(this._errorBound)\r\n}\r\n\r\nAwaitSink.prototype.error = function (t, e) {\r\n  var self = this\r\n  // Don't resolve error values, propagate directly\r\n  this.queue = this.queue.then(function () {\r\n    return self._errorBound(e)\r\n  }).catch(fatal)\r\n}\r\n\r\nAwaitSink.prototype._event = function (promise) {\r\n  return promise.then(this._eventBound)\r\n}\r\n\r\nAwaitSink.prototype._end = function (x) {\r\n  return Promise.resolve(x).then(this._endBound)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/promises.js\n// module id = 129\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport SafeSink from '../sink/SafeSink'\r\nimport * as dispose from '../disposable/dispose'\r\nimport * as tryEvent from '../source/tryEvent'\r\nimport PropagateTask from '../scheduler/PropagateTask'\r\n\r\n/**\r\n * If stream encounters an error, recover and continue with items from stream\r\n * returned by f.\r\n * @param {function(error:*):Stream} f function which returns a new stream\r\n * @param {Stream} stream\r\n * @returns {Stream} new stream which will recover from an error by calling f\r\n */\r\nexport function recoverWith (f, stream) {\r\n  return new Stream(new RecoverWith(f, stream.source))\r\n}\r\n\r\nexport var flatMapError = recoverWith\r\n\r\n/**\r\n * Create a stream containing only an error\r\n * @param {*} e error value, preferably an Error or Error subtype\r\n * @returns {Stream} new stream containing only an error\r\n */\r\nexport function throwError (e) {\r\n  return new Stream(new ErrorSource(e))\r\n}\r\n\r\nfunction ErrorSource (e) {\r\n  this.value = e\r\n}\r\n\r\nErrorSource.prototype.run = function (sink, scheduler) {\r\n  return scheduler.asap(new PropagateTask(runError, this.value, sink))\r\n}\r\n\r\nfunction runError (t, e, sink) {\r\n  sink.error(t, e)\r\n}\r\n\r\nfunction RecoverWith (f, source) {\r\n  this.f = f\r\n  this.source = source\r\n}\r\n\r\nRecoverWith.prototype.run = function (sink, scheduler) {\r\n  return new RecoverWithSink(this.f, this.source, sink, scheduler)\r\n}\r\n\r\nfunction RecoverWithSink (f, source, sink, scheduler) {\r\n  this.f = f\r\n  this.sink = new SafeSink(sink)\r\n  this.scheduler = scheduler\r\n  this.disposable = source.run(this, scheduler)\r\n}\r\n\r\nRecoverWithSink.prototype.event = function (t, x) {\r\n  tryEvent.tryEvent(t, x, this.sink)\r\n}\r\n\r\nRecoverWithSink.prototype.end = function (t, x) {\r\n  tryEvent.tryEnd(t, x, this.sink)\r\n}\r\n\r\nRecoverWithSink.prototype.error = function (t, e) {\r\n  var nextSink = this.sink.disable()\r\n\r\n  dispose.tryDispose(t, this.disposable, this.sink)\r\n  this._startNext(t, e, nextSink)\r\n}\r\n\r\nRecoverWithSink.prototype._startNext = function (t, x, sink) {\r\n  try {\r\n    this.disposable = this._continue(this.f, x, sink)\r\n  } catch (e) {\r\n    sink.error(t, e)\r\n  }\r\n}\r\n\r\nRecoverWithSink.prototype._continue = function (f, x, sink) {\r\n  var stream = f(x)\r\n  return stream.source.run(sink, this.scheduler)\r\n}\r\n\r\nRecoverWithSink.prototype.dispose = function () {\r\n  return this.disposable.dispose()\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/errors.js\n// module id = 130\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport default function SafeSink (sink) {\r\n  this.sink = sink\r\n  this.active = true\r\n}\r\n\r\nSafeSink.prototype.event = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n  this.sink.event(t, x)\r\n}\r\n\r\nSafeSink.prototype.end = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n  this.disable()\r\n  this.sink.end(t, x)\r\n}\r\n\r\nSafeSink.prototype.error = function (t, e) {\r\n  this.disable()\r\n  this.sink.error(t, e)\r\n}\r\n\r\nSafeSink.prototype.disable = function () {\r\n  this.active = false\r\n  return this.sink\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/sink/SafeSink.js\n// module id = 131\n// module chunks = 0 1","(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('most'), require('@most/multicast')) :\r\n  typeof define === 'function' && define.amd ? define(['most', '@most/multicast'], factory) :\r\n  (global.mostCreate = factory(global.most,global.mostMulticast));\r\n}(this, function (most,_most_multicast) { 'use strict';\r\n\r\n  /** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n\r\n  function defer (task) { return Promise.resolve(task).then(runTask); }\r\n\r\n  function runTask (task) {\r\n    try {\r\n      return task.run()\r\n    } catch (e) {\r\n      return task.error(e)\r\n    }\r\n  }\r\n\r\n  /** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n\r\n  var PropagateAllTask = function PropagateAllTask (sink, time, events) {\r\n    this.sink = sink\r\n    this.time = time\r\n    this.events = events\r\n  };\r\n\r\n  PropagateAllTask.prototype.run = function run () {\r\n      var this$1 = this;\r\n\r\n    var events = this.events\r\n    var sink = this.sink\r\n    var event\r\n\r\n    for (var i = 0, l = events.length; i < l; ++i) {\r\n      event = events[i]\r\n      this$1.time = event.time\r\n      sink.event(event.time, event.value)\r\n    }\r\n\r\n    events.length = 0\r\n  };\r\n\r\n  PropagateAllTask.prototype.error = function error (e) {\r\n    this.sink.error(this.time, e)\r\n  };\r\n\r\n  /** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n\r\n  var EndTask = function EndTask (t, x, sink) {\r\n    this.time = t\r\n    this.value = x\r\n    this.sink = sink\r\n  };\r\n\r\n  EndTask.prototype.run = function run () {\r\n    this.sink.end(this.time, this.value)\r\n  };\r\n\r\n  EndTask.prototype.error = function error (e) {\r\n    this.sink.error(this.time, e)\r\n  };\r\n\r\n  /** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n\r\n  var ErrorTask = function ErrorTask (t, e, sink) {\r\n    this.time = t\r\n    this.value = e\r\n    this.sink = sink\r\n  };\r\n\r\n  ErrorTask.prototype.run = function run () {\r\n    this.sink.error(this.time, this.value)\r\n  };\r\n\r\n  ErrorTask.prototype.error = function error (e) {\r\n    throw e\r\n  };\r\n\r\n  var DeferredSink = function DeferredSink (sink) {\r\n    this.sink = sink\r\n    this.events = []\r\n    this.active = true\r\n  };\r\n\r\n  DeferredSink.prototype.event = function event (t, x) {\r\n    if (!this.active) {\r\n      return\r\n    }\r\n\r\n    if (this.events.length === 0) {\r\n      defer(new PropagateAllTask(this.sink, t, this.events))\r\n    }\r\n\r\n    this.events.push({ time: t, value: x })\r\n  };\r\n\r\n  DeferredSink.prototype.end = function end (t, x) {\r\n    if (!this.active) {\r\n      return\r\n    }\r\n\r\n    this._end(new EndTask(t, x, this.sink))\r\n  };\r\n\r\n  DeferredSink.prototype.error = function error (t, e) {\r\n    this._end(new ErrorTask(t, e, this.sink))\r\n  };\r\n\r\n  DeferredSink.prototype._end = function _end (task) {\r\n    this.active = false\r\n    defer(task)\r\n  };\r\n\r\n  /** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n\r\n  var CreateSubscriber = function CreateSubscriber (sink, scheduler, subscribe) {\r\n    this.sink = sink\r\n    this.scheduler = scheduler\r\n    this._unsubscribe = this._init(subscribe)\r\n  };\r\n\r\n  CreateSubscriber.prototype._init = function _init (subscribe) {\r\n      var this$1 = this;\r\n\r\n    var add = function (x) { return this$1.sink.event(this$1.scheduler.now(), x); }\r\n    var end = function (x) { return this$1.sink.end(this$1.scheduler.now(), x); }\r\n    var error = function (e) { return this$1.sink.error(this$1.scheduler.now(), e); }\r\n\r\n    try {\r\n      return subscribe(add, end, error)\r\n    } catch (e) {\r\n      error(e)\r\n    }\r\n  };\r\n\r\n  CreateSubscriber.prototype.dispose = function dispose () {\r\n    if (typeof this._unsubscribe === 'function') {\r\n      return this._unsubscribe.call(void 0)\r\n    }\r\n  };\r\n\r\n  var Create = function Create (subscribe) {\r\n    this._subscribe = subscribe\r\n  };\r\n\r\n  Create.prototype.run = function run (sink, scheduler) {\r\n    return new CreateSubscriber(new DeferredSink(sink), scheduler, this._subscribe)\r\n  };\r\n\r\n  function index (run) { return new most.Stream(new _most_multicast.MulticastSource(new Create(run))); }\r\n\r\n  return index;\r\n\r\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@most/create/dist/create.js\n// module id = 132\n// module chunks = 0 1","import map from \"./map\";\r\n\r\nexport default function() {\r\n  var keys = [],\r\n      sortKeys = [],\r\n      sortValues,\r\n      rollup,\r\n      nest;\r\n\r\n  function apply(array, depth, createResult, setResult) {\r\n    if (depth >= keys.length) {\r\n      if (sortValues != null) array.sort(sortValues);\r\n      return rollup != null ? rollup(array) : array;\r\n    }\r\n\r\n    var i = -1,\r\n        n = array.length,\r\n        key = keys[depth++],\r\n        keyValue,\r\n        value,\r\n        valuesByKey = map(),\r\n        values,\r\n        result = createResult();\r\n\r\n    while (++i < n) {\r\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\r\n        values.push(value);\r\n      } else {\r\n        valuesByKey.set(keyValue, [value]);\r\n      }\r\n    }\r\n\r\n    valuesByKey.each(function(values, key) {\r\n      setResult(result, key, apply(values, depth, createResult, setResult));\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function entries(map, depth) {\r\n    if (++depth > keys.length) return map;\r\n    var array, sortKey = sortKeys[depth - 1];\r\n    if (rollup != null && depth >= keys.length) array = map.entries();\r\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\r\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\r\n  }\r\n\r\n  return nest = {\r\n    object: function(array) { return apply(array, 0, createObject, setObject); },\r\n    map: function(array) { return apply(array, 0, createMap, setMap); },\r\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\r\n    key: function(d) { keys.push(d); return nest; },\r\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\r\n    sortValues: function(order) { sortValues = order; return nest; },\r\n    rollup: function(f) { rollup = f; return nest; }\r\n  };\r\n}\r\n\r\nfunction createObject() {\r\n  return {};\r\n}\r\n\r\nfunction setObject(object, key, value) {\r\n  object[key] = value;\r\n}\r\n\r\nfunction createMap() {\r\n  return map();\r\n}\r\n\r\nfunction setMap(map, key, value) {\r\n  map.set(key, value);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-collection/src/nest.js\n// module id = 133\n// module chunks = 0 1","import {default as map, prefix} from \"./map\";\r\n\r\nfunction Set() {}\r\n\r\nvar proto = map.prototype;\r\n\r\nSet.prototype = set.prototype = {\r\n  constructor: Set,\r\n  has: proto.has,\r\n  add: function(value) {\r\n    value += \"\";\r\n    this[prefix + value] = value;\r\n    return this;\r\n  },\r\n  remove: proto.remove,\r\n  clear: proto.clear,\r\n  values: proto.keys,\r\n  size: proto.size,\r\n  empty: proto.empty,\r\n  each: proto.each\r\n};\r\n\r\nfunction set(object, f) {\r\n  var set = new Set;\r\n\r\n  // Copy constructor.\r\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\r\n\r\n  // Otherwise, assume it’s an array.\r\n  else if (object) {\r\n    var i = -1, n = object.length;\r\n    if (f == null) while (++i < n) set.add(object[i]);\r\n    else while (++i < n) set.add(f(object[i], i, object));\r\n  }\r\n\r\n  return set;\r\n}\r\n\r\nexport default set;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-collection/src/set.js\n// module id = 134\n// module chunks = 0 1","export default function(map) {\r\n  var keys = [];\r\n  for (var key in map) keys.push(key);\r\n  return keys;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-collection/src/keys.js\n// module id = 135\n// module chunks = 0 1","export default function(map) {\r\n  var values = [];\r\n  for (var key in map) values.push(map[key]);\r\n  return values;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-collection/src/values.js\n// module id = 136\n// module chunks = 0 1","export default function(map) {\r\n  var entries = [];\r\n  for (var key in map) entries.push({key: key, value: map[key]});\r\n  return entries;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-collection/src/entries.js\n// module id = 137\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport function tryEvent (t, x, sink) {\r\n  try {\r\n    sink.event(t, x)\r\n  } catch (e) {\r\n    sink.error(t, e)\r\n  }\r\n}\r\n\r\nexport function tryEnd (t, x, sink) {\r\n  try {\r\n    sink.end(t, x)\r\n  } catch (e) {\r\n    sink.error(t, e)\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/tryEvent.js\n// module id = 16\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Map from '../fusion/Map'\r\nimport Pipe from '../sink/Pipe'\r\n\r\n/**\r\n * Transform each value in the stream by applying f to each\r\n * @param {function(*):*} f mapping function\r\n * @param {Stream} stream stream to map\r\n * @returns {Stream} stream containing items transformed by f\r\n */\r\nexport function map (f, stream) {\r\n  return new Stream(Map.create(f, stream.source))\r\n}\r\n\r\n/**\r\n* Replace each value in the stream with x\r\n* @param {*} x\r\n* @param {Stream} stream\r\n* @returns {Stream} stream containing items replaced with x\r\n*/\r\nexport function constant (x, stream) {\r\n  return map(function () {\r\n    return x\r\n  }, stream)\r\n}\r\n\r\n/**\r\n* Perform a side effect for each item in the stream\r\n* @param {function(x:*):*} f side effect to execute for each item. The\r\n*  return value will be discarded.\r\n* @param {Stream} stream stream to tap\r\n* @returns {Stream} new stream containing the same items as this stream\r\n*/\r\nexport function tap (f, stream) {\r\n  return new Stream(new Tap(f, stream.source))\r\n}\r\n\r\nfunction Tap (f, source) {\r\n  this.source = source\r\n  this.f = f\r\n}\r\n\r\nTap.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new TapSink(this.f, sink), scheduler)\r\n}\r\n\r\nfunction TapSink (f, sink) {\r\n  this.sink = sink\r\n  this.f = f\r\n}\r\n\r\nTapSink.prototype.end = Pipe.prototype.end\r\nTapSink.prototype.error = Pipe.prototype.error\r\n\r\nTapSink.prototype.event = function (t, x) {\r\n  var f = this.f\r\n  f(x)\r\n  this.sink.event(t, x)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/transform.js\n// module id = 17\n// module chunks = 0 1","export {default as nest} from \"./src/nest\";\r\nexport {default as set} from \"./src/set\";\r\nexport {default as map} from \"./src/map\";\r\nexport {default as keys} from \"./src/keys\";\r\nexport {default as values} from \"./src/values\";\r\nexport {default as entries} from \"./src/entries\";\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-collection/index.js\n// module id = 19\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\n/**\r\n * A sink mixin that simply forwards event, end, and error to\r\n * another sink.\r\n * @param sink\r\n * @constructor\r\n */\r\nexport default function Pipe (sink) {\r\n  this.sink = sink\r\n}\r\n\r\nPipe.prototype.event = function (t, x) {\r\n  return this.sink.event(t, x)\r\n}\r\n\r\nPipe.prototype.end = function (t, x) {\r\n  return this.sink.end(t, x)\r\n}\r\n\r\nPipe.prototype.error = function (t, e) {\r\n  return this.sink.error(t, e)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/sink/Pipe.js\n// module id = 2\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport default function fatalError (e) {\r\n  setTimeout(function () {\r\n    throw e\r\n  }, 0)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/fatalError.js\n// module id = 23\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Scheduler from './Scheduler'\r\nimport ClockTimer from './ClockTimer'\r\nimport Timeline from './Timeline'\r\n\r\nvar defaultScheduler = new Scheduler(new ClockTimer(), new Timeline())\r\n\r\nexport default defaultScheduler\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/scheduler/defaultScheduler.js\n// module id = 24\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport function defer (task) {\r\n  return Promise.resolve(task).then(runTask)\r\n}\r\n\r\nexport function runTask (task) {\r\n  try {\r\n    return task.run()\r\n  } catch (e) {\r\n    return task.error(e)\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/task.js\n// module id = 25\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Pipe from '../sink/Pipe'\r\nimport Filter from './Filter'\r\nimport FilterMap from './FilterMap'\r\nimport * as base from '@most/prelude'\r\n\r\nexport default function Map (f, source) {\r\n  this.f = f\r\n  this.source = source\r\n}\r\n\r\n/**\r\n * Create a mapped source, fusing adjacent map.map, filter.map,\r\n * and filter.map.map if possible\r\n * @param {function(*):*} f mapping function\r\n * @param {{run:function}} source source to map\r\n * @returns {Map|FilterMap} mapped source, possibly fused\r\n */\r\nMap.create = function createMap (f, source) {\r\n  if (source instanceof Map) {\r\n    return new Map(base.compose(f, source.f), source.source)\r\n  }\r\n\r\n  if (source instanceof Filter) {\r\n    return new FilterMap(source.p, f, source.source)\r\n  }\r\n\r\n  return new Map(f, source)\r\n}\r\n\r\nMap.prototype.run = function (sink, scheduler) { // eslint-disable-line no-extend-native\r\n  return this.source.run(new MapSink(this.f, sink), scheduler)\r\n}\r\n\r\nfunction MapSink (f, sink) {\r\n  this.f = f\r\n  this.sink = sink\r\n}\r\n\r\nMapSink.prototype.end = Pipe.prototype.end\r\nMapSink.prototype.error = Pipe.prototype.error\r\n\r\nMapSink.prototype.event = function (t, x) {\r\n  var f = this.f\r\n  this.sink.event(t, f(x))\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/fusion/Map.js\n// module id = 26\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Sink from './Pipe'\r\n\r\nexport default function IndexSink (i, sink) {\r\n  this.sink = sink\r\n  this.index = i\r\n  this.active = true\r\n  this.value = void 0\r\n}\r\n\r\nIndexSink.prototype.event = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n  this.value = x\r\n  this.sink.event(t, this)\r\n}\r\n\r\nIndexSink.prototype.end = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n  this.active = false\r\n  this.sink.end(t, { index: this.index, value: x })\r\n}\r\n\r\nIndexSink.prototype.error = Sink.prototype.error\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/sink/IndexSink.js\n// module id = 27\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport default function invoke (f, args) {\r\n  /* eslint complexity: [2,7] */\r\n  switch (args.length) {\r\n    case 0: return f()\r\n    case 1: return f(args[0])\r\n    case 2: return f(args[0], args[1])\r\n    case 3: return f(args[0], args[1], args[2])\r\n    case 4: return f(args[0], args[1], args[2], args[3])\r\n    case 5: return f(args[0], args[1], args[2], args[3], args[4])\r\n    default:\r\n      return f.apply(void 0, args)\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/invoke.js\n// module id = 28\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport * as dispose from '../disposable/dispose'\r\nimport LinkedList from '../LinkedList'\r\nimport { id as identity } from '@most/prelude'\r\n\r\nexport function mergeConcurrently (concurrency, stream) {\r\n  return mergeMapConcurrently(identity, concurrency, stream)\r\n}\r\n\r\nexport function mergeMapConcurrently (f, concurrency, stream) {\r\n  return new Stream(new MergeConcurrently(f, concurrency, stream.source))\r\n}\r\n\r\nfunction MergeConcurrently (f, concurrency, source) {\r\n  this.f = f\r\n  this.concurrency = concurrency\r\n  this.source = source\r\n}\r\n\r\nMergeConcurrently.prototype.run = function (sink, scheduler) {\r\n  return new Outer(this.f, this.concurrency, this.source, sink, scheduler)\r\n}\r\n\r\nfunction Outer (f, concurrency, source, sink, scheduler) {\r\n  this.f = f\r\n  this.concurrency = concurrency\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n  this.pending = []\r\n  this.current = new LinkedList()\r\n  this.disposable = dispose.once(source.run(this, scheduler))\r\n  this.active = true\r\n}\r\n\r\nOuter.prototype.event = function (t, x) {\r\n  this._addInner(t, x)\r\n}\r\n\r\nOuter.prototype._addInner = function (t, x) {\r\n  if (this.current.length < this.concurrency) {\r\n    this._startInner(t, x)\r\n  } else {\r\n    this.pending.push(x)\r\n  }\r\n}\r\n\r\nOuter.prototype._startInner = function (t, x) {\r\n  try {\r\n    this._initInner(t, x)\r\n  } catch (e) {\r\n    this.error(t, e)\r\n  }\r\n}\r\n\r\nOuter.prototype._initInner = function (t, x) {\r\n  var innerSink = new Inner(t, this, this.sink)\r\n  innerSink.disposable = mapAndRun(this.f, x, innerSink, this.scheduler)\r\n  this.current.add(innerSink)\r\n}\r\n\r\nfunction mapAndRun (f, x, sink, scheduler) {\r\n  return f(x).source.run(sink, scheduler)\r\n}\r\n\r\nOuter.prototype.end = function (t, x) {\r\n  this.active = false\r\n  dispose.tryDispose(t, this.disposable, this.sink)\r\n  this._checkEnd(t, x)\r\n}\r\n\r\nOuter.prototype.error = function (t, e) {\r\n  this.active = false\r\n  this.sink.error(t, e)\r\n}\r\n\r\nOuter.prototype.dispose = function () {\r\n  this.active = false\r\n  this.pending.length = 0\r\n  return Promise.all([this.disposable.dispose(), this.current.dispose()])\r\n}\r\n\r\nOuter.prototype._endInner = function (t, x, inner) {\r\n  this.current.remove(inner)\r\n  dispose.tryDispose(t, inner, this)\r\n\r\n  if (this.pending.length === 0) {\r\n    this._checkEnd(t, x)\r\n  } else {\r\n    this._startInner(t, this.pending.shift())\r\n  }\r\n}\r\n\r\nOuter.prototype._checkEnd = function (t, x) {\r\n  if (!this.active && this.current.isEmpty()) {\r\n    this.sink.end(t, x)\r\n  }\r\n}\r\n\r\nfunction Inner (time, outer, sink) {\r\n  this.prev = this.next = null\r\n  this.time = time\r\n  this.outer = outer\r\n  this.sink = sink\r\n  this.disposable = void 0\r\n}\r\n\r\nInner.prototype.event = function (t, x) {\r\n  this.sink.event(Math.max(t, this.time), x)\r\n}\r\n\r\nInner.prototype.end = function (t, x) {\r\n  this.outer._endInner(Math.max(t, this.time), x, this)\r\n}\r\n\r\nInner.prototype.error = function (t, e) {\r\n  this.outer.error(Math.max(t, this.time), e)\r\n}\r\n\r\nInner.prototype.dispose = function () {\r\n  return this.disposable.dispose()\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/mergeConcurrently.js\n// module id = 29\n// module chunks = 0 1","export var prefix = \"$\";\r\n\r\nfunction Map() {}\r\n\r\nMap.prototype = map.prototype = {\r\n  constructor: Map,\r\n  has: function(key) {\r\n    return (prefix + key) in this;\r\n  },\r\n  get: function(key) {\r\n    return this[prefix + key];\r\n  },\r\n  set: function(key, value) {\r\n    this[prefix + key] = value;\r\n    return this;\r\n  },\r\n  remove: function(key) {\r\n    var property = prefix + key;\r\n    return property in this && delete this[property];\r\n  },\r\n  clear: function() {\r\n    for (var property in this) if (property[0] === prefix) delete this[property];\r\n  },\r\n  keys: function() {\r\n    var keys = [];\r\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\r\n    return keys;\r\n  },\r\n  values: function() {\r\n    var values = [];\r\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\r\n    return values;\r\n  },\r\n  entries: function() {\r\n    var entries = [];\r\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\r\n    return entries;\r\n  },\r\n  size: function() {\r\n    var size = 0;\r\n    for (var property in this) if (property[0] === prefix) ++size;\r\n    return size;\r\n  },\r\n  empty: function() {\r\n    for (var property in this) if (property[0] === prefix) return false;\r\n    return true;\r\n  },\r\n  each: function(f) {\r\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\r\n  }\r\n};\r\n\r\nfunction map(object, f) {\r\n  var map = new Map;\r\n\r\n  // Copy constructor.\r\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\r\n\r\n  // Index array by numeric index or specified key function.\r\n  else if (Array.isArray(object)) {\r\n    var i = -1,\r\n        n = object.length,\r\n        o;\r\n\r\n    if (f == null) while (++i < n) map.set(i, object[i]);\r\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\r\n  }\r\n\r\n  // Convert object to map.\r\n  else if (object) for (var key in object) map.set(key, object[key]);\r\n\r\n  return map;\r\n}\r\n\r\nexport default map;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-collection/src/map.js\n// module id = 30\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n\r\n// Non-mutating array operations\r\n\r\n// cons :: a -> [a] -> [a]\r\n// a with x prepended\r\nfunction cons(x, a) {\r\n  var l = a.length;\r\n  var b = new Array(l + 1);\r\n  b[0] = x;\r\n  for (var i = 0; i < l; ++i) {\r\n    b[i + 1] = a[i];\r\n  }\r\n  return b;\r\n}\r\n\r\n// append :: a -> [a] -> [a]\r\n// a with x appended\r\nfunction append(x, a) {\r\n  var l = a.length;\r\n  var b = new Array(l + 1);\r\n  for (var i = 0; i < l; ++i) {\r\n    b[i] = a[i];\r\n  }\r\n\r\n  b[l] = x;\r\n  return b;\r\n}\r\n\r\n// drop :: Int -> [a] -> [a]\r\n// drop first n elements\r\nfunction drop(n, a) {\r\n  // eslint-disable-line complexity\r\n  if (n < 0) {\r\n    throw new TypeError('n must be >= 0');\r\n  }\r\n\r\n  var l = a.length;\r\n  if (n === 0 || l === 0) {\r\n    return a;\r\n  }\r\n\r\n  if (n >= l) {\r\n    return [];\r\n  }\r\n\r\n  return unsafeDrop(n, a, l - n);\r\n}\r\n\r\n// unsafeDrop :: Int -> [a] -> Int -> [a]\r\n// Internal helper for drop\r\nfunction unsafeDrop(n, a, l) {\r\n  var b = new Array(l);\r\n  for (var i = 0; i < l; ++i) {\r\n    b[i] = a[n + i];\r\n  }\r\n  return b;\r\n}\r\n\r\n// tail :: [a] -> [a]\r\n// drop head element\r\nfunction tail(a) {\r\n  return drop(1, a);\r\n}\r\n\r\n// copy :: [a] -> [a]\r\n// duplicate a (shallow duplication)\r\nfunction copy(a) {\r\n  var l = a.length;\r\n  var b = new Array(l);\r\n  for (var i = 0; i < l; ++i) {\r\n    b[i] = a[i];\r\n  }\r\n  return b;\r\n}\r\n\r\n// map :: (a -> b) -> [a] -> [b]\r\n// transform each element with f\r\nfunction map(f, a) {\r\n  var l = a.length;\r\n  var b = new Array(l);\r\n  for (var i = 0; i < l; ++i) {\r\n    b[i] = f(a[i]);\r\n  }\r\n  return b;\r\n}\r\n\r\n// reduce :: (a -> b -> a) -> a -> [b] -> a\r\n// accumulate via left-fold\r\nfunction reduce(f, z, a) {\r\n  var r = z;\r\n  for (var i = 0, l = a.length; i < l; ++i) {\r\n    r = f(r, a[i], i);\r\n  }\r\n  return r;\r\n}\r\n\r\n// replace :: a -> Int -> [a]\r\n// replace element at index\r\nfunction replace(x, i, a) {\r\n  // eslint-disable-line complexity\r\n  if (i < 0) {\r\n    throw new TypeError('i must be >= 0');\r\n  }\r\n\r\n  var l = a.length;\r\n  var b = new Array(l);\r\n  for (var j = 0; j < l; ++j) {\r\n    b[j] = i === j ? x : a[j];\r\n  }\r\n  return b;\r\n}\r\n\r\n// remove :: Int -> [a] -> [a]\r\n// remove element at index\r\nfunction remove(i, a) {\r\n  // eslint-disable-line complexity\r\n  if (i < 0) {\r\n    throw new TypeError('i must be >= 0');\r\n  }\r\n\r\n  var l = a.length;\r\n  if (l === 0 || i >= l) {\r\n    // exit early if index beyond end of array\r\n    return a;\r\n  }\r\n\r\n  if (l === 1) {\r\n    // exit early if index in bounds and length === 1\r\n    return [];\r\n  }\r\n\r\n  return unsafeRemove(i, a, l - 1);\r\n}\r\n\r\n// unsafeRemove :: Int -> [a] -> Int -> [a]\r\n// Internal helper to remove element at index\r\nfunction unsafeRemove(i, a, l) {\r\n  var b = new Array(l);\r\n  var j = void 0;\r\n  for (j = 0; j < i; ++j) {\r\n    b[j] = a[j];\r\n  }\r\n  for (j = i; j < l; ++j) {\r\n    b[j] = a[j + 1];\r\n  }\r\n\r\n  return b;\r\n}\r\n\r\n// removeAll :: (a -> boolean) -> [a] -> [a]\r\n// remove all elements matching a predicate\r\nfunction removeAll(f, a) {\r\n  var l = a.length;\r\n  var b = new Array(l);\r\n  var j = 0;\r\n  for (var x, i = 0; i < l; ++i) {\r\n    x = a[i];\r\n    if (!f(x)) {\r\n      b[j] = x;\r\n      ++j;\r\n    }\r\n  }\r\n\r\n  b.length = j;\r\n  return b;\r\n}\r\n\r\n// findIndex :: a -> [a] -> Int\r\n// find index of x in a, from the left\r\nfunction findIndex(x, a) {\r\n  for (var i = 0, l = a.length; i < l; ++i) {\r\n    if (x === a[i]) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n// isArrayLike :: * -> boolean\r\n// Return true iff x is array-like\r\nfunction isArrayLike(x) {\r\n  return x != null && typeof x.length === 'number' && typeof x !== 'function';\r\n}\r\n\r\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n\r\n// id :: a -> a\r\nvar id = function id(x) {\r\n  return x;\r\n};\r\n\r\n// compose :: (b -> c) -> (a -> b) -> (a -> c)\r\nvar compose = function compose(f, g) {\r\n  return function (x) {\r\n    return f(g(x));\r\n  };\r\n};\r\n\r\n// apply :: (a -> b) -> a -> b\r\nvar apply = function apply(f, x) {\r\n  return f(x);\r\n};\r\n\r\n// curry2 :: ((a, b) -> c) -> (a -> b -> c)\r\nfunction curry2(f) {\r\n  function curried(a, b) {\r\n    switch (arguments.length) {\r\n      case 0:\r\n        return curried;\r\n      case 1:\r\n        return function (b) {\r\n          return f(a, b);\r\n        };\r\n      default:\r\n        return f(a, b);\r\n    }\r\n  }\r\n  return curried;\r\n}\r\n\r\n// curry3 :: ((a, b, c) -> d) -> (a -> b -> c -> d)\r\nfunction curry3(f) {\r\n  function curried(a, b, c) {\r\n    // eslint-disable-line complexity\r\n    switch (arguments.length) {\r\n      case 0:\r\n        return curried;\r\n      case 1:\r\n        return curry2(function (b, c) {\r\n          return f(a, b, c);\r\n        });\r\n      case 2:\r\n        return function (c) {\r\n          return f(a, b, c);\r\n        };\r\n      default:\r\n        return f(a, b, c);\r\n    }\r\n  }\r\n  return curried;\r\n}\r\n\r\n// curry4 :: ((a, b, c, d) -> e) -> (a -> b -> c -> d -> e)\r\nfunction curry4(f) {\r\n  function curried(a, b, c, d) {\r\n    // eslint-disable-line complexity\r\n    switch (arguments.length) {\r\n      case 0:\r\n        return curried;\r\n      case 1:\r\n        return curry3(function (b, c, d) {\r\n          return f(a, b, c, d);\r\n        });\r\n      case 2:\r\n        return curry2(function (c, d) {\r\n          return f(a, b, c, d);\r\n        });\r\n      case 3:\r\n        return function (d) {\r\n          return f(a, b, c, d);\r\n        };\r\n      default:\r\n        return f(a, b, c, d);\r\n    }\r\n  }\r\n  return curried;\r\n}\r\n\r\n/** @license MIT License (c) copyright 2016 original author or authors */\r\n\r\nexport { cons, append, drop, tail, copy, map, reduce, replace, remove, removeAll, findIndex, isArrayLike, id, compose, apply, curry2, curry3, curry4 };\r\n//# sourceMappingURL=index.es.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@most/prelude/dist/index.es.js\n// module id = 4\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\n/* eslint import/first: 0 */\r\n\r\nimport Stream from './Stream'\r\nimport * as base from '@most/prelude'\r\nimport { of, empty, never } from './source/core'\r\nimport { from } from './source/from'\r\nimport { periodic } from './source/periodic'\r\nimport symbolObservable from 'symbol-observable'\r\n\r\n/**\r\n * Core stream type\r\n * @type {Stream}\r\n */\r\nexport { Stream }\r\n\r\n// Add of and empty to constructor for fantasy-land compat\r\nStream.of = of\r\nStream.empty = empty\r\n// Add from to constructor for ES Observable compat\r\nStream.from = from\r\nexport { of, of as just, empty, never, from, periodic }\r\n\r\n// -----------------------------------------------------------------------\r\n// Draft ES Observable proposal interop\r\n// https://github.com/zenparsing/es-observable\r\n\r\nimport { subscribe } from './observable/subscribe'\r\n\r\nStream.prototype.subscribe = function (subscriber) {\r\n  return subscribe(subscriber, this)\r\n}\r\n\r\nStream.prototype[symbolObservable] = function () {\r\n  return this\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Fluent adapter\r\n\r\nimport { thru } from './combinator/thru'\r\n\r\n/**\r\n * Adapt a functional stream transform to fluent style.\r\n * It applies f to the this stream object\r\n * @param  {function(s: Stream): Stream} f function that\r\n * receives the stream itself and must return a new stream\r\n * @return {Stream}\r\n */\r\nStream.prototype.thru = function (f) {\r\n  return thru(f, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Adapting other sources\r\n\r\n/**\r\n * Create a stream of events from the supplied EventTarget or EventEmitter\r\n * @param {String} event event name\r\n * @param {EventTarget|EventEmitter} source EventTarget or EventEmitter. The source\r\n *  must support either addEventListener/removeEventListener (w3c EventTarget:\r\n *  http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget),\r\n *  or addListener/removeListener (node EventEmitter: http://nodejs.org/api/events.html)\r\n * @returns {Stream} stream of events of the specified type from the source\r\n */\r\nexport { fromEvent } from './source/fromEvent'\r\n\r\n// -----------------------------------------------------------------------\r\n// Observing\r\n\r\nimport { observe, drain } from './combinator/observe'\r\n\r\nexport { observe, observe as forEach, drain }\r\n\r\n/**\r\n * Process all the events in the stream\r\n * @returns {Promise} promise that fulfills when the stream ends, or rejects\r\n *  if the stream fails with an unhandled error.\r\n */\r\nStream.prototype.observe = Stream.prototype.forEach = function (f) {\r\n  return observe(f, this)\r\n}\r\n\r\n/**\r\n * Consume all events in the stream, without providing a function to process each.\r\n * This causes a stream to become active and begin emitting events, and is useful\r\n * in cases where all processing has been setup upstream via other combinators, and\r\n * there is no need to process the terminal events.\r\n * @returns {Promise} promise that fulfills when the stream ends, or rejects\r\n *  if the stream fails with an unhandled error.\r\n */\r\nStream.prototype.drain = function () {\r\n  return drain(this)\r\n}\r\n\r\n// -------------------------------------------------------\r\n\r\nimport { loop } from './combinator/loop'\r\n\r\nexport { loop }\r\n\r\n/**\r\n * Generalized feedback loop. Call a stepper function for each event. The stepper\r\n * will be called with 2 params: the current seed and the an event value.  It must\r\n * return a new { seed, value } pair. The `seed` will be fed back into the next\r\n * invocation of stepper, and the `value` will be propagated as the event value.\r\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\r\n * @param {*} seed initial seed value passed to first stepper call\r\n * @returns {Stream} new stream whose values are the `value` field of the objects\r\n * returned by the stepper\r\n */\r\nStream.prototype.loop = function (stepper, seed) {\r\n  return loop(stepper, seed, this)\r\n}\r\n\r\n// -------------------------------------------------------\r\n\r\nimport { scan, reduce } from './combinator/accumulate'\r\n\r\nexport { scan, reduce }\r\n\r\n/**\r\n * Create a stream containing successive reduce results of applying f to\r\n * the previous reduce result and the current stream item.\r\n * @param {function(result:*, x:*):*} f reducer function\r\n * @param {*} initial initial value\r\n * @returns {Stream} new stream containing successive reduce results\r\n */\r\nStream.prototype.scan = function (f, initial) {\r\n  return scan(f, initial, this)\r\n}\r\n\r\n/**\r\n * Reduce the stream to produce a single result.  Note that reducing an infinite\r\n * stream will return a Promise that never fulfills, but that may reject if an error\r\n * occurs.\r\n * @param {function(result:*, x:*):*} f reducer function\r\n * @param {*} initial optional initial value\r\n * @returns {Promise} promise for the file result of the reduce\r\n */\r\nStream.prototype.reduce = function (f, initial) {\r\n  return reduce(f, initial, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Building and extending\r\n\r\nexport { unfold } from './source/unfold'\r\nexport { iterate } from './source/iterate'\r\nexport { generate } from './source/generate'\r\nimport { concat, cons as startWith } from './combinator/build'\r\n\r\nexport { concat, startWith }\r\n\r\n/**\r\n * @param {Stream} tail\r\n * @returns {Stream} new stream containing all items in this followed by\r\n *  all items in tail\r\n */\r\nStream.prototype.concat = function (tail) {\r\n  return concat(this, tail)\r\n}\r\n\r\n/**\r\n * @param {*} x value to prepend\r\n * @returns {Stream} a new stream with x prepended\r\n */\r\nStream.prototype.startWith = function (x) {\r\n  return startWith(x, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Transforming\r\n\r\nimport { map, constant, tap } from './combinator/transform'\r\nimport { ap } from './combinator/applicative'\r\n\r\nexport { map, constant, tap, ap }\r\n\r\n/**\r\n * Transform each value in the stream by applying f to each\r\n * @param {function(*):*} f mapping function\r\n * @returns {Stream} stream containing items transformed by f\r\n */\r\nStream.prototype.map = function (f) {\r\n  return map(f, this)\r\n}\r\n\r\n/**\r\n * Assume this stream contains functions, and apply each function to each item\r\n * in the provided stream.  This generates, in effect, a cross product.\r\n * @param {Stream} xs stream of items to which\r\n * @returns {Stream} stream containing the cross product of items\r\n */\r\nStream.prototype.ap = function (xs) {\r\n  return ap(this, xs)\r\n}\r\n\r\n/**\r\n * Replace each value in the stream with x\r\n * @param {*} x\r\n * @returns {Stream} stream containing items replaced with x\r\n */\r\nStream.prototype.constant = function (x) {\r\n  return constant(x, this)\r\n}\r\n\r\n/**\r\n * Perform a side effect for each item in the stream\r\n * @param {function(x:*):*} f side effect to execute for each item. The\r\n *  return value will be discarded.\r\n * @returns {Stream} new stream containing the same items as this stream\r\n */\r\nStream.prototype.tap = function (f) {\r\n  return tap(f, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Transducer support\r\n\r\nimport { transduce } from './combinator/transduce'\r\n\r\nexport { transduce }\r\n\r\n/**\r\n * Transform this stream by passing its events through a transducer.\r\n * @param  {function} transducer transducer function\r\n * @return {Stream} stream of events transformed by the transducer\r\n */\r\nStream.prototype.transduce = function (transducer) {\r\n  return transduce(transducer, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// FlatMapping\r\n\r\nimport { flatMap, join } from './combinator/flatMap'\r\n\r\n// @deprecated flatMap, use chain instead\r\nexport { flatMap, flatMap as chain, join }\r\n\r\n/**\r\n * Map each value in the stream to a new stream, and merge it into the\r\n * returned outer stream. Event arrival times are preserved.\r\n * @param {function(x:*):Stream} f chaining function, must return a Stream\r\n * @returns {Stream} new stream containing all events from each stream returned by f\r\n */\r\nStream.prototype.chain = function (f) {\r\n  return flatMap(f, this)\r\n}\r\n\r\n// @deprecated use chain instead\r\nStream.prototype.flatMap = Stream.prototype.chain\r\n\r\n  /**\r\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\r\n * streams to the outer. Event arrival times are preserved.\r\n * @returns {Stream<X>} new stream containing all events of all inner streams\r\n */\r\nStream.prototype.join = function () {\r\n  return join(this)\r\n}\r\n\r\nimport { continueWith } from './combinator/continueWith'\r\n\r\n// @deprecated flatMapEnd, use continueWith instead\r\nexport { continueWith, continueWith as flatMapEnd }\r\n\r\n/**\r\n * Map the end event to a new stream, and begin emitting its values.\r\n * @param {function(x:*):Stream} f function that receives the end event value,\r\n * and *must* return a new Stream to continue with.\r\n * @returns {Stream} new stream that emits all events from the original stream,\r\n * followed by all events from the stream returned by f.\r\n */\r\nStream.prototype.continueWith = function (f) {\r\n  return continueWith(f, this)\r\n}\r\n\r\n// @deprecated use continueWith instead\r\nStream.prototype.flatMapEnd = Stream.prototype.continueWith\r\n\r\nimport { concatMap } from './combinator/concatMap'\r\n\r\nexport { concatMap }\r\n\r\nStream.prototype.concatMap = function (f) {\r\n  return concatMap(f, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Concurrent merging\r\n\r\nimport { mergeConcurrently } from './combinator/mergeConcurrently'\r\n\r\nexport { mergeConcurrently }\r\n\r\n/**\r\n * Flatten a Stream<Stream<X>> to Stream<X> by merging inner\r\n * streams to the outer, limiting the number of inner streams that may\r\n * be active concurrently.\r\n * @param {number} concurrency at most this many inner streams will be\r\n *  allowed to be active concurrently.\r\n * @return {Stream<X>} new stream containing all events of all inner\r\n *  streams, with limited concurrency.\r\n */\r\nStream.prototype.mergeConcurrently = function (concurrency) {\r\n  return mergeConcurrently(concurrency, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Merging\r\n\r\nimport { merge, mergeArray } from './combinator/merge'\r\n\r\nexport { merge, mergeArray }\r\n\r\n/**\r\n * Merge this stream and all the provided streams\r\n * @returns {Stream} stream containing items from this stream and s in time\r\n * order.  If two events are simultaneous they will be merged in\r\n * arbitrary order.\r\n */\r\nStream.prototype.merge = function (/* ...streams */) {\r\n  return mergeArray(base.cons(this, arguments))\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Combining\r\n\r\nimport { combine, combineArray } from './combinator/combine'\r\n\r\nexport { combine, combineArray }\r\n\r\n/**\r\n * Combine latest events from all input streams\r\n * @param {function(...events):*} f function to combine most recent events\r\n * @returns {Stream} stream containing the result of applying f to the most recent\r\n *  event of each input stream, whenever a new event arrives on any stream.\r\n */\r\nStream.prototype.combine = function (f /*, ...streams */) {\r\n  return combineArray(f, base.replace(this, 0, arguments))\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Sampling\r\n\r\nimport { sample, sampleArray, sampleWith } from './combinator/sample'\r\n\r\nexport { sample, sampleArray, sampleWith }\r\n\r\n/**\r\n * When an event arrives on sampler, emit the latest event value from stream.\r\n * @param {Stream} sampler stream of events at whose arrival time\r\n *  signal's latest value will be propagated\r\n * @returns {Stream} sampled stream of values\r\n */\r\nStream.prototype.sampleWith = function (sampler) {\r\n  return sampleWith(sampler, this)\r\n}\r\n\r\n/**\r\n * When an event arrives on this stream, emit the result of calling f with the latest\r\n * values of all streams being sampled\r\n * @param {function(...values):*} f function to apply to each set of sampled values\r\n * @returns {Stream} stream of sampled and transformed values\r\n */\r\nStream.prototype.sample = function (f /* ...streams */) {\r\n  return sampleArray(f, this, base.tail(arguments))\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Zipping\r\n\r\nimport { zip, zipArray } from './combinator/zip'\r\n\r\nexport { zip, zipArray }\r\n\r\n/**\r\n * Pair-wise combine items with those in s. Given 2 streams:\r\n * [1,2,3] zipWith f [4,5,6] -> [f(1,4),f(2,5),f(3,6)]\r\n * Note: zip causes fast streams to buffer and wait for slow streams.\r\n * @param {function(a:Stream, b:Stream, ...):*} f function to combine items\r\n * @returns {Stream} new stream containing pairs\r\n */\r\nStream.prototype.zip = function (f /*, ...streams */) {\r\n  return zipArray(f, base.replace(this, 0, arguments))\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Switching\r\n\r\nimport { switchLatest } from './combinator/switch'\r\n\r\n// @deprecated switch, use switchLatest instead\r\nexport { switchLatest, switchLatest as switch }\r\n\r\n/**\r\n * Given a stream of streams, return a new stream that adopts the behavior\r\n * of the most recent inner stream.\r\n * @returns {Stream} switching stream\r\n */\r\nStream.prototype.switchLatest = function () {\r\n  return switchLatest(this)\r\n}\r\n\r\n// @deprecated use switchLatest instead\r\nStream.prototype.switch = Stream.prototype.switchLatest\r\n\r\n// -----------------------------------------------------------------------\r\n// Filtering\r\n\r\nimport { filter, skipRepeats, skipRepeatsWith } from './combinator/filter'\r\n\r\n// @deprecated distinct, use skipRepeats instead\r\n// @deprecated distinctBy, use skipRepeatsWith instead\r\nexport { filter, skipRepeats, skipRepeats as distinct, skipRepeatsWith, skipRepeatsWith as distinctBy }\r\n\r\n/**\r\n * Retain only items matching a predicate\r\n * stream:                           -12345678-\r\n * filter(x => x % 2 === 0, stream): --2-4-6-8-\r\n * @param {function(x:*):boolean} p filtering predicate called for each item\r\n * @returns {Stream} stream containing only items for which predicate returns truthy\r\n */\r\nStream.prototype.filter = function (p) {\r\n  return filter(p, this)\r\n}\r\n\r\n/**\r\n * Skip repeated events, using === to compare items\r\n * stream:           -abbcd-\r\n * distinct(stream): -ab-cd-\r\n * @returns {Stream} stream with no repeated events\r\n */\r\nStream.prototype.skipRepeats = function () {\r\n  return skipRepeats(this)\r\n}\r\n\r\n/**\r\n * Skip repeated events, using supplied equals function to compare items\r\n * @param {function(a:*, b:*):boolean} equals function to compare items\r\n * @returns {Stream} stream with no repeated events\r\n */\r\nStream.prototype.skipRepeatsWith = function (equals) {\r\n  return skipRepeatsWith(equals, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Slicing\r\n\r\nimport { take, skip, slice, takeWhile, skipWhile, skipAfter } from './combinator/slice'\r\n\r\nexport { take, skip, slice, takeWhile, skipWhile, skipAfter }\r\n\r\n/**\r\n * stream:          -abcd-\r\n * take(2, stream): -ab|\r\n * @param {Number} n take up to this many events\r\n * @returns {Stream} stream containing at most the first n items from this stream\r\n */\r\nStream.prototype.take = function (n) {\r\n  return take(n, this)\r\n}\r\n\r\n/**\r\n * stream:          -abcd->\r\n * skip(2, stream): ---cd->\r\n * @param {Number} n skip this many events\r\n * @returns {Stream} stream not containing the first n events\r\n */\r\nStream.prototype.skip = function (n) {\r\n  return skip(n, this)\r\n}\r\n\r\n/**\r\n * Slice a stream by event index. Equivalent to, but more efficient than\r\n * stream.take(end).skip(start);\r\n * NOTE: Negative start and end are not supported\r\n * @param {Number} start skip all events before the start index\r\n * @param {Number} end allow all events from the start index to the end index\r\n * @returns {Stream} stream containing items where start <= index < end\r\n */\r\nStream.prototype.slice = function (start, end) {\r\n  return slice(start, end, this)\r\n}\r\n\r\n/**\r\n * stream:                        -123451234->\r\n * takeWhile(x => x < 5, stream): -1234|\r\n * @param {function(x:*):boolean} p predicate\r\n * @returns {Stream} stream containing items up to, but not including, the\r\n * first item for which p returns falsy.\r\n */\r\nStream.prototype.takeWhile = function (p) {\r\n  return takeWhile(p, this)\r\n}\r\n\r\n/**\r\n * stream:                        -123451234->\r\n * skipWhile(x => x < 5, stream): -----51234->\r\n * @param {function(x:*):boolean} p predicate\r\n * @returns {Stream} stream containing items following *and including* the\r\n * first item for which p returns falsy.\r\n */\r\nStream.prototype.skipWhile = function (p) {\r\n  return skipWhile(p, this)\r\n}\r\n\r\n/**\r\n * stream:                         -123456789->\r\n * skipAfter(x => x === 5, stream):-12345|\r\n * @param {function(x:*):boolean} p predicate\r\n * @returns {Stream} stream containing items up to, *and including*, the\r\n * first item for which p returns truthy.\r\n */\r\nStream.prototype.skipAfter = function (p) {\r\n  return skipAfter(p, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Time slicing\r\n\r\nimport { takeUntil, skipUntil, during } from './combinator/timeslice'\r\n\r\n// @deprecated takeUntil, use until instead\r\n// @deprecated skipUntil, use since instead\r\nexport { takeUntil, takeUntil as until, skipUntil, skipUntil as since, during }\r\n\r\n/**\r\n * stream:                    -a-b-c-d-e-f-g->\r\n * signal:                    -------x\r\n * takeUntil(signal, stream): -a-b-c-|\r\n * @param {Stream} signal retain only events in stream before the first\r\n * event in signal\r\n * @returns {Stream} new stream containing only events that occur before\r\n * the first event in signal.\r\n */\r\nStream.prototype.until = function (signal) {\r\n  return takeUntil(signal, this)\r\n}\r\n\r\n// @deprecated use until instead\r\nStream.prototype.takeUntil = Stream.prototype.until\r\n\r\n  /**\r\n * stream:                    -a-b-c-d-e-f-g->\r\n * signal:                    -------x\r\n * takeUntil(signal, stream): -------d-e-f-g->\r\n * @param {Stream} signal retain only events in stream at or after the first\r\n * event in signal\r\n * @returns {Stream} new stream containing only events that occur after\r\n * the first event in signal.\r\n */\r\nStream.prototype.since = function (signal) {\r\n  return skipUntil(signal, this)\r\n}\r\n\r\n// @deprecated use since instead\r\nStream.prototype.skipUntil = Stream.prototype.since\r\n\r\n  /**\r\n * stream:                    -a-b-c-d-e-f-g->\r\n * timeWindow:                -----s\r\n * s:                               -----t\r\n * stream.during(timeWindow): -----c-d-e-|\r\n * @param {Stream<Stream>} timeWindow a stream whose first event (s) represents\r\n *  the window start time.  That event (s) is itself a stream whose first event (t)\r\n *  represents the window end time\r\n * @returns {Stream} new stream containing only events within the provided timespan\r\n */\r\nStream.prototype.during = function (timeWindow) {\r\n  return during(timeWindow, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Delaying\r\n\r\nimport { delay } from './combinator/delay'\r\n\r\nexport { delay }\r\n\r\n/**\r\n * @param {Number} delayTime milliseconds to delay each item\r\n * @returns {Stream} new stream containing the same items, but delayed by ms\r\n */\r\nStream.prototype.delay = function (delayTime) {\r\n  return delay(delayTime, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Getting event timestamp\r\n\r\nimport { timestamp } from './combinator/timestamp'\r\nexport { timestamp }\r\n\r\n/**\r\n * Expose event timestamps into the stream. Turns a Stream<X> into\r\n * Stream<{time:t, value:X}>\r\n * @returns {Stream<{time:number, value:*}>}\r\n */\r\nStream.prototype.timestamp = function () {\r\n  return timestamp(this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Rate limiting\r\n\r\nimport { throttle, debounce } from './combinator/limit'\r\n\r\nexport { throttle, debounce }\r\n\r\n/**\r\n * Limit the rate of events\r\n * stream:              abcd----abcd----\r\n * throttle(2, stream): a-c-----a-c-----\r\n * @param {Number} period time to suppress events\r\n * @returns {Stream} new stream that skips events for throttle period\r\n */\r\nStream.prototype.throttle = function (period) {\r\n  return throttle(period, this)\r\n}\r\n\r\n/**\r\n * Wait for a burst of events to subside and emit only the last event in the burst\r\n * stream:              abcd----abcd----\r\n * debounce(2, stream): -----d-------d--\r\n * @param {Number} period events occuring more frequently than this\r\n *  on the provided scheduler will be suppressed\r\n * @returns {Stream} new debounced stream\r\n */\r\nStream.prototype.debounce = function (period) {\r\n  return debounce(period, this)\r\n}\r\n\r\n// -----------------------------------------------------------------------\r\n// Awaiting Promises\r\n\r\nimport { fromPromise, awaitPromises } from './combinator/promises'\r\n\r\n// @deprecated await, use awaitPromises instead\r\nexport { fromPromise, awaitPromises, awaitPromises as await }\r\n\r\n/**\r\n * Await promises, turning a Stream<Promise<X>> into Stream<X>.  Preserves\r\n * event order, but timeshifts events based on promise resolution time.\r\n * @returns {Stream<X>} stream containing non-promise values\r\n */\r\nStream.prototype.awaitPromises = function () {\r\n  return awaitPromises(this)\r\n}\r\n\r\n// @deprecated use awaitPromises instead\r\nStream.prototype.await = Stream.prototype.awaitPromises\r\n\r\n// -----------------------------------------------------------------------\r\n// Error handling\r\n\r\nimport { recoverWith, flatMapError, throwError } from './combinator/errors'\r\n\r\n// @deprecated flatMapError, use recoverWith instead\r\nexport { recoverWith, flatMapError, throwError }\r\n\r\n/**\r\n * If this stream encounters an error, recover and continue with items from stream\r\n * returned by f.\r\n * stream:                  -a-b-c-X-\r\n * f(X):                           d-e-f-g-\r\n * flatMapError(f, stream): -a-b-c-d-e-f-g-\r\n * @param {function(error:*):Stream} f function which returns a new stream\r\n * @returns {Stream} new stream which will recover from an error by calling f\r\n */\r\nStream.prototype.recoverWith = function (f) {\r\n  return flatMapError(f, this)\r\n}\r\n\r\n// @deprecated use recoverWith instead\r\nStream.prototype.flatMapError = Stream.prototype.recoverWith\r\n\r\n// -----------------------------------------------------------------------\r\n// Multicasting\r\n\r\nimport multicast from '@most/multicast'\r\n\r\nexport { multicast }\r\n\r\n/**\r\n * Transform the stream into multicast stream.  That means that many subscribers\r\n * to the stream will not cause multiple invocations of the internal machinery.\r\n * @returns {Stream} new stream which will multicast events to all observers.\r\n */\r\nStream.prototype.multicast = function () {\r\n  return multicast(this)\r\n}\r\n\r\n// export the instance of the defaultScheduler for third-party libraries\r\nimport defaultScheduler from './scheduler/defaultScheduler'\r\n\r\nexport { defaultScheduler }\r\n\r\n// export an implementation of Task used internally for third-party libraries\r\nimport PropagateTask from './scheduler/PropagateTask'\r\n\r\nexport { PropagateTask }\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/index.js\n// module id = 42\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\n/* global Set, Symbol */\r\nvar iteratorSymbol\r\n// Firefox ships a partial implementation using the name @@iterator.\r\n// https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\r\nif (typeof Set === 'function' && typeof new Set()['@@iterator'] === 'function') {\r\n  iteratorSymbol = '@@iterator'\r\n} else {\r\n  iteratorSymbol = typeof Symbol === 'function' ? Symbol.iterator\r\n  : '_es6shim_iterator_'\r\n}\r\n\r\nexport function isIterable (o) {\r\n  return typeof o[iteratorSymbol] === 'function'\r\n}\r\n\r\nexport function getIterator (o) {\r\n  return o[iteratorSymbol]()\r\n}\r\n\r\nexport function makeIterable (f, o) {\r\n  o[iteratorSymbol] = f\r\n  return o\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/iterable.js\n// module id = 43\n// module chunks = 0 1","/* global window */\r\nimport ponyfill from './ponyfill.js';\r\n\r\nvar root;\r\n\r\nif (typeof self !== 'undefined') {\r\n  root = self;\r\n} else if (typeof window !== 'undefined') {\r\n  root = window;\r\n} else if (typeof global !== 'undefined') {\r\n  root = global;\r\n} else if (typeof module !== 'undefined') {\r\n  root = module;\r\n} else {\r\n  root = Function('return this')();\r\n}\r\n\r\nvar result = ponyfill(root);\r\nexport default result;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/es/index.js\n// module id = 44\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport * as dispose from './disposable/dispose'\r\nimport defaultScheduler from './scheduler/defaultScheduler'\r\n\r\nexport function withDefaultScheduler (source) {\r\n  return withScheduler(source, defaultScheduler)\r\n}\r\n\r\nexport function withScheduler (source, scheduler) {\r\n  return new Promise(function (resolve, reject) {\r\n    runSource(source, scheduler, resolve, reject)\r\n  })\r\n}\r\n\r\nfunction runSource (source, scheduler, resolve, reject) {\r\n  var disposable = dispose.settable()\r\n  var observer = new Drain(resolve, reject, disposable)\r\n\r\n  disposable.setDisposable(source.run(observer, scheduler))\r\n}\r\n\r\nfunction Drain (end, error, disposable) {\r\n  this._end = end\r\n  this._error = error\r\n  this._disposable = disposable\r\n  this.active = true\r\n}\r\n\r\nDrain.prototype.event = function (t, x) {}\r\n\r\nDrain.prototype.end = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n  this.active = false\r\n  disposeThen(this._end, this._error, this._disposable, x)\r\n}\r\n\r\nDrain.prototype.error = function (t, e) {\r\n  this.active = false\r\n  disposeThen(this._error, this._error, this._disposable, e)\r\n}\r\n\r\nfunction disposeThen (end, error, disposable, x) {\r\n  Promise.resolve(disposable.dispose()).then(function () {\r\n    end(x)\r\n  }, error)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/runSource.js\n// module id = 45\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Pipe from '../sink/Pipe'\r\n\r\nexport default function Filter (p, source) {\r\n  this.p = p\r\n  this.source = source\r\n}\r\n\r\n/**\r\n * Create a filtered source, fusing adjacent filter.filter if possible\r\n * @param {function(x:*):boolean} p filtering predicate\r\n * @param {{run:function}} source source to filter\r\n * @returns {Filter} filtered source\r\n */\r\nFilter.create = function createFilter (p, source) {\r\n  if (source instanceof Filter) {\r\n    return new Filter(and(source.p, p), source.source)\r\n  }\r\n\r\n  return new Filter(p, source)\r\n}\r\n\r\nFilter.prototype.run = function (sink, scheduler) {\r\n  return this.source.run(new FilterSink(this.p, sink), scheduler)\r\n}\r\n\r\nfunction FilterSink (p, sink) {\r\n  this.p = p\r\n  this.sink = sink\r\n}\r\n\r\nFilterSink.prototype.end = Pipe.prototype.end\r\nFilterSink.prototype.error = Pipe.prototype.error\r\n\r\nFilterSink.prototype.event = function (t, x) {\r\n  var p = this.p\r\n  p(x) && this.sink.event(t, x)\r\n}\r\n\r\nfunction and (p, q) {\r\n  return function (x) {\r\n    return p(x) && q(x)\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/fusion/Filter.js\n// module id = 46\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport Pipe from '../sink/Pipe'\r\nimport * as dispose from '../disposable/dispose'\r\n\r\nexport function continueWith (f, stream) {\r\n  return new Stream(new ContinueWith(f, stream.source))\r\n}\r\n\r\nfunction ContinueWith (f, source) {\r\n  this.f = f\r\n  this.source = source\r\n}\r\n\r\nContinueWith.prototype.run = function (sink, scheduler) {\r\n  return new ContinueWithSink(this.f, this.source, sink, scheduler)\r\n}\r\n\r\nfunction ContinueWithSink (f, source, sink, scheduler) {\r\n  this.f = f\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n  this.active = true\r\n  this.disposable = dispose.once(source.run(this, scheduler))\r\n}\r\n\r\nContinueWithSink.prototype.error = Pipe.prototype.error\r\n\r\nContinueWithSink.prototype.event = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n  this.sink.event(t, x)\r\n}\r\n\r\nContinueWithSink.prototype.end = function (t, x) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n\r\n  dispose.tryDispose(t, this.disposable, this.sink)\r\n  this._startNext(t, x, this.sink)\r\n}\r\n\r\nContinueWithSink.prototype._startNext = function (t, x, sink) {\r\n  try {\r\n    this.disposable = this._continue(this.f, x, sink)\r\n  } catch (e) {\r\n    sink.error(t, e)\r\n  }\r\n}\r\n\r\nContinueWithSink.prototype._continue = function (f, x, sink) {\r\n  return f(x).source.run(sink, this.scheduler)\r\n}\r\n\r\nContinueWithSink.prototype.dispose = function () {\r\n  this.active = false\r\n  return this.disposable.dispose()\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/continueWith.js\n// module id = 47\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport * as transform from './transform'\r\nimport * as core from '../source/core'\r\nimport Pipe from '../sink/Pipe'\r\nimport IndexSink from '../sink/IndexSink'\r\nimport * as dispose from '../disposable/dispose'\r\nimport * as base from '@most/prelude'\r\nimport invoke from '../invoke'\r\n\r\nvar map = base.map\r\nvar tail = base.tail\r\n\r\n/**\r\n * Combine latest events from all input streams\r\n * @param {function(...events):*} f function to combine most recent events\r\n * @returns {Stream} stream containing the result of applying f to the most recent\r\n *  event of each input stream, whenever a new event arrives on any stream.\r\n */\r\nexport function combine (f /*, ...streams */) {\r\n  return combineArray(f, tail(arguments))\r\n}\r\n\r\n/**\r\n* Combine latest events from all input streams\r\n* @param {function(...events):*} f function to combine most recent events\r\n* @param {[Stream]} streams most recent events\r\n* @returns {Stream} stream containing the result of applying f to the most recent\r\n*  event of each input stream, whenever a new event arrives on any stream.\r\n*/\r\nexport function combineArray (f, streams) {\r\n  var l = streams.length\r\n  return l === 0 ? core.empty()\r\n  : l === 1 ? transform.map(f, streams[0])\r\n  : new Stream(combineSources(f, streams))\r\n}\r\n\r\nfunction combineSources (f, streams) {\r\n  return new Combine(f, map(getSource, streams))\r\n}\r\n\r\nfunction getSource (stream) {\r\n  return stream.source\r\n}\r\n\r\nfunction Combine (f, sources) {\r\n  this.f = f\r\n  this.sources = sources\r\n}\r\n\r\nCombine.prototype.run = function (sink, scheduler) {\r\n  var l = this.sources.length\r\n  var disposables = new Array(l)\r\n  var sinks = new Array(l)\r\n\r\n  var mergeSink = new CombineSink(disposables, sinks, sink, this.f)\r\n\r\n  for (var indexSink, i = 0; i < l; ++i) {\r\n    indexSink = sinks[i] = new IndexSink(i, mergeSink)\r\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\r\n  }\r\n\r\n  return dispose.all(disposables)\r\n}\r\n\r\nfunction CombineSink (disposables, sinks, sink, f) {\r\n  this.sink = sink\r\n  this.disposables = disposables\r\n  this.sinks = sinks\r\n  this.f = f\r\n\r\n  var l = sinks.length\r\n  this.awaiting = l\r\n  this.values = new Array(l)\r\n  this.hasValue = new Array(l)\r\n  for (var i = 0; i < l; ++i) {\r\n    this.hasValue[i] = false\r\n  }\r\n\r\n  this.activeCount = sinks.length\r\n}\r\n\r\nCombineSink.prototype.error = Pipe.prototype.error\r\n\r\nCombineSink.prototype.event = function (t, indexedValue) {\r\n  var i = indexedValue.index\r\n  var awaiting = this._updateReady(i)\r\n\r\n  this.values[i] = indexedValue.value\r\n  if (awaiting === 0) {\r\n    this.sink.event(t, invoke(this.f, this.values))\r\n  }\r\n}\r\n\r\nCombineSink.prototype._updateReady = function (index) {\r\n  if (this.awaiting > 0) {\r\n    if (!this.hasValue[index]) {\r\n      this.hasValue[index] = true\r\n      this.awaiting -= 1\r\n    }\r\n  }\r\n  return this.awaiting\r\n}\r\n\r\nCombineSink.prototype.end = function (t, indexedValue) {\r\n  dispose.tryDispose(t, this.disposables[indexedValue.index], this.sink)\r\n  if (--this.activeCount === 0) {\r\n    this.sink.end(t, indexedValue.value)\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/combine.js\n// module id = 48\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport { mergeConcurrently, mergeMapConcurrently } from './mergeConcurrently'\r\n\r\n/**\r\n * Map each value in the stream to a new stream, and merge it into the\r\n * returned outer stream. Event arrival times are preserved.\r\n * @param {function(x:*):Stream} f chaining function, must return a Stream\r\n * @param {Stream} stream\r\n * @returns {Stream} new stream containing all events from each stream returned by f\r\n */\r\nexport function flatMap (f, stream) {\r\n  return mergeMapConcurrently(f, Infinity, stream)\r\n}\r\n\r\n/**\r\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\r\n * streams to the outer. Event arrival times are preserved.\r\n * @param {Stream<Stream<X>>} stream stream of streams\r\n * @returns {Stream<X>} new stream containing all events of all inner streams\r\n */\r\nexport function join (stream) {\r\n  return mergeConcurrently(Infinity, stream)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/combinator/flatMap.js\n// module id = 49\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport fatal from '../fatalError'\r\n\r\nexport default function PropagateTask (run, value, sink) {\r\n  this._run = run\r\n  this.value = value\r\n  this.sink = sink\r\n  this.active = true\r\n}\r\n\r\nPropagateTask.event = function (value, sink) {\r\n  return new PropagateTask(emit, value, sink)\r\n}\r\n\r\nPropagateTask.end = function (value, sink) {\r\n  return new PropagateTask(end, value, sink)\r\n}\r\n\r\nPropagateTask.error = function (value, sink) {\r\n  return new PropagateTask(error, value, sink)\r\n}\r\n\r\nPropagateTask.prototype.dispose = function () {\r\n  this.active = false\r\n}\r\n\r\nPropagateTask.prototype.run = function (t) {\r\n  if (!this.active) {\r\n    return\r\n  }\r\n  this._run(t, this.value, this.sink)\r\n}\r\n\r\nPropagateTask.prototype.error = function (t, e) {\r\n  if (!this.active) {\r\n    return fatal(e)\r\n  }\r\n  this.sink.error(t, e)\r\n}\r\n\r\nfunction error (t, e, sink) {\r\n  sink.error(t, e)\r\n}\r\n\r\nfunction emit (t, x, sink) {\r\n  sink.event(t, x)\r\n}\r\n\r\nfunction end (t, x, sink) {\r\n  sink.end(t, x)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/scheduler/PropagateTask.js\n// module id = 5\n// module chunks = 0 1","import { append, remove, findIndex } from '@most/prelude';\r\n\r\nvar MulticastDisposable = function MulticastDisposable (source, sink) {\r\n  this.source = source\r\n  this.sink = sink\r\n  this.disposed = false\r\n};\r\n\r\nMulticastDisposable.prototype.dispose = function dispose () {\r\n  if (this.disposed) {\r\n    return\r\n  }\r\n  this.disposed = true\r\n  var remaining = this.source.remove(this.sink)\r\n  return remaining === 0 && this.source._dispose()\r\n};\r\n\r\nfunction tryEvent (t, x, sink) {\r\n  try {\r\n    sink.event(t, x)\r\n  } catch (e) {\r\n    sink.error(t, e)\r\n  }\r\n}\r\n\r\nfunction tryEnd (t, x, sink) {\r\n  try {\r\n    sink.end(t, x)\r\n  } catch (e) {\r\n    sink.error(t, e)\r\n  }\r\n}\r\n\r\nvar dispose = function (disposable) { return disposable.dispose(); }\r\n\r\nvar emptyDisposable = {\r\n  dispose: function dispose$1 () {}\r\n}\r\n\r\nvar MulticastSource = function MulticastSource (source) {\r\n  this.source = source\r\n  this.sinks = []\r\n  this._disposable = emptyDisposable\r\n};\r\n\r\nMulticastSource.prototype.run = function run (sink, scheduler) {\r\n  var n = this.add(sink)\r\n  if (n === 1) {\r\n    this._disposable = this.source.run(this, scheduler)\r\n  }\r\n  return new MulticastDisposable(this, sink)\r\n};\r\n\r\nMulticastSource.prototype._dispose = function _dispose () {\r\n  var disposable = this._disposable\r\n  this._disposable = emptyDisposable\r\n  return Promise.resolve(disposable).then(dispose)\r\n};\r\n\r\nMulticastSource.prototype.add = function add (sink) {\r\n  this.sinks = append(sink, this.sinks)\r\n  return this.sinks.length\r\n};\r\n\r\nMulticastSource.prototype.remove = function remove$1 (sink) {\r\n  var i = findIndex(sink, this.sinks)\r\n  // istanbul ignore next\r\n  if (i >= 0) {\r\n    this.sinks = remove(i, this.sinks)\r\n  }\r\n\r\n  return this.sinks.length\r\n};\r\n\r\nMulticastSource.prototype.event = function event (time, value) {\r\n  var s = this.sinks\r\n  if (s.length === 1) {\r\n    return s[0].event(time, value)\r\n  }\r\n  for (var i = 0; i < s.length; ++i) {\r\n    tryEvent(time, value, s[i])\r\n  }\r\n};\r\n\r\nMulticastSource.prototype.end = function end (time, value) {\r\n  var s = this.sinks\r\n  for (var i = 0; i < s.length; ++i) {\r\n    tryEnd(time, value, s[i])\r\n  }\r\n};\r\n\r\nMulticastSource.prototype.error = function error (time, err) {\r\n  var s = this.sinks\r\n  for (var i = 0; i < s.length; ++i) {\r\n    s[i].error(time, err)\r\n  }\r\n};\r\n\r\nfunction multicast (stream) {\r\n  var source = stream.source\r\n  return source instanceof MulticastSource\r\n    ? stream\r\n    : new stream.constructor(new MulticastSource(source))\r\n}\r\n\r\nexport { MulticastSource };export default multicast;\r\n//# sourceMappingURL=multicast.es.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@most/multicast/dist/multicast.es.js\n// module id = 50\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport * as dispose from '../disposable/dispose'\r\nimport PropagateTask from '../scheduler/PropagateTask'\r\n\r\n/**\r\n * Stream containing only x\r\n * @param {*} x\r\n * @returns {Stream}\r\n */\r\nexport function of (x) {\r\n  return new Stream(new Just(x))\r\n}\r\n\r\nfunction Just (x) {\r\n  this.value = x\r\n}\r\n\r\nJust.prototype.run = function (sink, scheduler) {\r\n  return scheduler.asap(new PropagateTask(runJust, this.value, sink))\r\n}\r\n\r\nfunction runJust (t, x, sink) {\r\n  sink.event(t, x)\r\n  sink.end(t, void 0)\r\n}\r\n\r\n/**\r\n * Stream containing no events and ends immediately\r\n * @returns {Stream}\r\n */\r\nexport function empty () {\r\n  return EMPTY\r\n}\r\n\r\nfunction EmptySource () {}\r\n\r\nEmptySource.prototype.run = function (sink, scheduler) {\r\n  var task = PropagateTask.end(void 0, sink)\r\n  scheduler.asap(task)\r\n\r\n  return dispose.create(disposeEmpty, task)\r\n}\r\n\r\nfunction disposeEmpty (task) {\r\n  return task.dispose()\r\n}\r\n\r\nvar EMPTY = new Stream(new EmptySource())\r\n\r\n/**\r\n * Stream containing no events and never ends\r\n * @returns {Stream}\r\n */\r\nexport function never () {\r\n  return NEVER\r\n}\r\n\r\nfunction NeverSource () {}\r\n\r\nNeverSource.prototype.run = function () {\r\n  return dispose.empty()\r\n}\r\n\r\nvar NEVER = new Stream(new NeverSource())\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/core.js\n// module id = 7\n// module chunks = 0 1","import {setInterval} from \"timers\";\r\nimport {Stream} from \"most\";\r\nconst mws = require('most-w3msg');\r\nimport {nest as d3_nest} from 'd3-collection'\r\n\r\ntype Row = { [key:string]: any }\r\ntype Rows = Row[]\r\ntype UnsubscribeHandle = ()=>void\r\ntype SubscribeHandle = (Rows)=>void\r\n\r\nconst toJson = JSON.parse\r\nconst pick = attrName => obj => obj[attrName]\r\nconst log = tag => d => { console.log(`[${tag}]`,d); return d; }\r\n\r\ninterface IDataSource {\r\n    getWholeData: (from: Date, to: Date )=>Rows\r\n    subscribe: (handler: SubscribeHandle)=>UnsubscribeHandle\r\n}\r\n\r\nexport class RandomDataSource implements IDataSource {\r\n    subscribeHandles: { [key: number]: SubscribeHandle};\r\n    intervalHandlerID: any;\r\n\r\n    constructor() {\r\n        this.subscribeHandles = {}\r\n        this.intervalHandlerID = setInterval(()=>{\r\n            for(var k in this.subscribeHandles) {\r\n                this.subscribeHandles[k]([this.fakeRow()]);\r\n            }\r\n        },5000)\r\n    }\r\n\r\n    private fakeRow(ts?): Row {\r\n        if(ts) {\r\n            return {timestamp: ts, value: Math.floor(Math.random()*100)}\r\n        }else {\r\n            return {timestamp: Date.now(), value: Math.floor(Math.random()*100)}\r\n        }\r\n    }\r\n\r\n    public getWholeData(from: Date, to: Date ): Rows  {\r\n        // todo : implement\r\n        return null;\r\n    }\r\n\r\n    public subscribe(handler: SubscribeHandle): UnsubscribeHandle {\r\n        const key = Math.random()\r\n        this.subscribeHandles[key] = handler\r\n\r\n        return ()=> {\r\n            clearInterval(this.intervalHandlerID)\r\n            delete this.subscribeHandles[key]\r\n        }\r\n    }\r\n}\r\n\r\nexport class BlockchainInfoDataSource implements IDataSource {\r\n    subscribeHandles: { [key: number]: SubscribeHandle};\r\n    intervalHandlerID: any;\r\n    buffer: any[];\r\n    ws$: Stream<any>\r\n    option: {tickSize: number}\r\n\r\n    constructor(option) {\r\n        this.option = option;\r\n        this.buffer = []\r\n        this.subscribeHandles = {}\r\n\r\n        var ws  = new WebSocket('wss://ws.blockchain.info/inv')\r\n        ws.onopen = (evt) => {\r\n            ws.send(JSON.stringify({op:'unconfirmed_sub'}))\r\n        };\r\n\r\n        this.ws$ = mws.fromWebSocket(ws, ws.close.bind(ws))\r\n            // .map(d=>{console.log(d); return d})\r\n            .map(pick(\"data\"))\r\n            // .map(log('data attribute'))\r\n            .map(toJson)\r\n            // .map(log('toJson'))\r\n            .map(pick(\"x\"))\r\n            .map(d=>{\r\n                d.timeGrp = Math.floor(d.time / this.option.tickSize)\r\n                d.time = new Date(d.time*1000);\r\n                return d;\r\n            })\r\n            .loop((memo, v)=>{\r\n                if( v.timeGrp == memo.timeGrp) {\r\n                    memo.datas.push(v)\r\n                    return {seed:memo, value: null}\r\n                }else {\r\n                    return {seed:{timeGrp:v.timeGrp, datas:[v]}, value: memo.datas}\r\n                }\r\n            },{timeGrp: Math.floor(Date.now()/(this.option.tickSize*1000)), datas: []})\r\n            // .map(log('after grouping'))\r\n            .filter(v=> v != null)\r\n            // .map(log('after grouping2'))\r\n            .map(v=>{\r\n                return d3_nest().key(d=>d.timeGrp).rollup(leaves=>{\r\n                    const sizeSum = leaves.reduce((m,v)=>{return m+v.size},0)\r\n\r\n                    return sizeSum / leaves.length\r\n                }).entries(v)\r\n            })\r\n            // .map(log('avg'))\r\n            .map((v)=>{\r\n                for(var k in this.subscribeHandles) {\r\n                    this.subscribeHandles[k]( v );\r\n                }\r\n            })\r\n            // .map(log(\"x\"));\r\n\r\n        this.ws$.observe((x)=>{\r\n            this.buffer.push({ts: Date.now(), data: x })\r\n        })\r\n    }\r\n\r\n    getWholeData(from: Date, to: Date): Rows {\r\n\r\n      //현재 시간 기준의 임시 데이터 생성 후 리턴\r\n      var data = []\r\n      var key = Math.floor(Date.now()/(this.option.tickSize*1000))\r\n\r\n      console.log('data key', key)\r\n      for (var i=0; i<60; i++) {\r\n        var value = Math.floor( (Math.random() * (800 - 200 + 1)) + 200 )\r\n        var obj = {\r\n          key: key,\r\n          value: value\r\n        }\r\n        data.push(obj)\r\n        key = key-1\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    subscribe(handler: SubscribeHandle): UnsubscribeHandle {\r\n        const key = Math.random()\r\n        this.subscribeHandles[key] = handler\r\n\r\n        return ()=> {\r\n            clearInterval(this.intervalHandlerID)\r\n            delete this.subscribeHandles[key]\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dataSource.ts","var apply = Function.prototype.apply;\r\n\r\n// DOM APIs, for completeness\r\n\r\nexports.setTimeout = function() {\r\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\r\n};\r\nexports.setInterval = function() {\r\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\r\n};\r\nexports.clearTimeout =\r\nexports.clearInterval = function(timeout) {\r\n  if (timeout) {\r\n    timeout.close();\r\n  }\r\n};\r\n\r\nfunction Timeout(id, clearFn) {\r\n  this._id = id;\r\n  this._clearFn = clearFn;\r\n}\r\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\r\nTimeout.prototype.close = function() {\r\n  this._clearFn.call(window, this._id);\r\n};\r\n\r\n// Does not start the time, just sets up the members needed.\r\nexports.enroll = function(item, msecs) {\r\n  clearTimeout(item._idleTimeoutId);\r\n  item._idleTimeout = msecs;\r\n};\r\n\r\nexports.unenroll = function(item) {\r\n  clearTimeout(item._idleTimeoutId);\r\n  item._idleTimeout = -1;\r\n};\r\n\r\nexports._unrefActive = exports.active = function(item) {\r\n  clearTimeout(item._idleTimeoutId);\r\n\r\n  var msecs = item._idleTimeout;\r\n  if (msecs >= 0) {\r\n    item._idleTimeoutId = setTimeout(function onTimeout() {\r\n      if (item._onTimeout)\r\n        item._onTimeout();\r\n    }, msecs);\r\n  }\r\n};\r\n\r\n// setimmediate attaches itself to the global object\r\nrequire(\"setimmediate\");\r\n// On some exotic environments, it's not clear which object `setimmeidate` was\r\n// able to install onto.  Search each possibility in the same order as the\r\n// `setimmediate` library.\r\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\r\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\r\n                       (this && this.setImmediate);\r\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\r\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\r\n                         (this && this.clearImmediate);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 81\n// module chunks = 0 1","(function (global, undefined) {\r\n    \"use strict\";\r\n\r\n    if (global.setImmediate) {\r\n        return;\r\n    }\r\n\r\n    var nextHandle = 1; // Spec says greater than zero\r\n    var tasksByHandle = {};\r\n    var currentlyRunningATask = false;\r\n    var doc = global.document;\r\n    var registerImmediate;\r\n\r\n    function setImmediate(callback) {\r\n      // Callback can either be a function or a string\r\n      if (typeof callback !== \"function\") {\r\n        callback = new Function(\"\" + callback);\r\n      }\r\n      // Copy function arguments\r\n      var args = new Array(arguments.length - 1);\r\n      for (var i = 0; i < args.length; i++) {\r\n          args[i] = arguments[i + 1];\r\n      }\r\n      // Store and register the task\r\n      var task = { callback: callback, args: args };\r\n      tasksByHandle[nextHandle] = task;\r\n      registerImmediate(nextHandle);\r\n      return nextHandle++;\r\n    }\r\n\r\n    function clearImmediate(handle) {\r\n        delete tasksByHandle[handle];\r\n    }\r\n\r\n    function run(task) {\r\n        var callback = task.callback;\r\n        var args = task.args;\r\n        switch (args.length) {\r\n        case 0:\r\n            callback();\r\n            break;\r\n        case 1:\r\n            callback(args[0]);\r\n            break;\r\n        case 2:\r\n            callback(args[0], args[1]);\r\n            break;\r\n        case 3:\r\n            callback(args[0], args[1], args[2]);\r\n            break;\r\n        default:\r\n            callback.apply(undefined, args);\r\n            break;\r\n        }\r\n    }\r\n\r\n    function runIfPresent(handle) {\r\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\r\n        // So if we're currently running a task, we'll need to delay this invocation.\r\n        if (currentlyRunningATask) {\r\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\r\n            // \"too much recursion\" error.\r\n            setTimeout(runIfPresent, 0, handle);\r\n        } else {\r\n            var task = tasksByHandle[handle];\r\n            if (task) {\r\n                currentlyRunningATask = true;\r\n                try {\r\n                    run(task);\r\n                } finally {\r\n                    clearImmediate(handle);\r\n                    currentlyRunningATask = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function installNextTickImplementation() {\r\n        registerImmediate = function(handle) {\r\n            process.nextTick(function () { runIfPresent(handle); });\r\n        };\r\n    }\r\n\r\n    function canUsePostMessage() {\r\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\r\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\r\n        if (global.postMessage && !global.importScripts) {\r\n            var postMessageIsAsynchronous = true;\r\n            var oldOnMessage = global.onmessage;\r\n            global.onmessage = function() {\r\n                postMessageIsAsynchronous = false;\r\n            };\r\n            global.postMessage(\"\", \"*\");\r\n            global.onmessage = oldOnMessage;\r\n            return postMessageIsAsynchronous;\r\n        }\r\n    }\r\n\r\n    function installPostMessageImplementation() {\r\n        // Installs an event handler on `global` for the `message` event: see\r\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\r\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\r\n\r\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\r\n        var onGlobalMessage = function(event) {\r\n            if (event.source === global &&\r\n                typeof event.data === \"string\" &&\r\n                event.data.indexOf(messagePrefix) === 0) {\r\n                runIfPresent(+event.data.slice(messagePrefix.length));\r\n            }\r\n        };\r\n\r\n        if (global.addEventListener) {\r\n            global.addEventListener(\"message\", onGlobalMessage, false);\r\n        } else {\r\n            global.attachEvent(\"onmessage\", onGlobalMessage);\r\n        }\r\n\r\n        registerImmediate = function(handle) {\r\n            global.postMessage(messagePrefix + handle, \"*\");\r\n        };\r\n    }\r\n\r\n    function installMessageChannelImplementation() {\r\n        var channel = new MessageChannel();\r\n        channel.port1.onmessage = function(event) {\r\n            var handle = event.data;\r\n            runIfPresent(handle);\r\n        };\r\n\r\n        registerImmediate = function(handle) {\r\n            channel.port2.postMessage(handle);\r\n        };\r\n    }\r\n\r\n    function installReadyStateChangeImplementation() {\r\n        var html = doc.documentElement;\r\n        registerImmediate = function(handle) {\r\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\r\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\r\n            var script = doc.createElement(\"script\");\r\n            script.onreadystatechange = function () {\r\n                runIfPresent(handle);\r\n                script.onreadystatechange = null;\r\n                html.removeChild(script);\r\n                script = null;\r\n            };\r\n            html.appendChild(script);\r\n        };\r\n    }\r\n\r\n    function installSetTimeoutImplementation() {\r\n        registerImmediate = function(handle) {\r\n            setTimeout(runIfPresent, 0, handle);\r\n        };\r\n    }\r\n\r\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\r\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\r\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\r\n\r\n    // Don't get fooled by e.g. browserify environments.\r\n    if ({}.toString.call(global.process) === \"[object process]\") {\r\n        // For Node.js before 0.9\r\n        installNextTickImplementation();\r\n\r\n    } else if (canUsePostMessage()) {\r\n        // For non-IE10 modern browsers\r\n        installPostMessageImplementation();\r\n\r\n    } else if (global.MessageChannel) {\r\n        // For web workers, where supported\r\n        installMessageChannelImplementation();\r\n\r\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\r\n        // For IE 6–8\r\n        installReadyStateChangeImplementation();\r\n\r\n    } else {\r\n        // For older browsers\r\n        installSetTimeoutImplementation();\r\n    }\r\n\r\n    attachTo.setImmediate = setImmediate;\r\n    attachTo.clearImmediate = clearImmediate;\r\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 82\n// module chunks = 0 1","// shim for using process in browser\r\nvar process = module.exports = {};\r\n\r\n// cached from whatever global is present so that test runners that stub it\r\n// don't break things.  But we need to wrap it in a try catch in case it is\r\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\r\n// function because try/catches deoptimize in certain engines.\r\n\r\nvar cachedSetTimeout;\r\nvar cachedClearTimeout;\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined');\r\n}\r\nfunction defaultClearTimeout () {\r\n    throw new Error('clearTimeout has not been defined');\r\n}\r\n(function () {\r\n    try {\r\n        if (typeof setTimeout === 'function') {\r\n            cachedSetTimeout = setTimeout;\r\n        } else {\r\n            cachedSetTimeout = defaultSetTimout;\r\n        }\r\n    } catch (e) {\r\n        cachedSetTimeout = defaultSetTimout;\r\n    }\r\n    try {\r\n        if (typeof clearTimeout === 'function') {\r\n            cachedClearTimeout = clearTimeout;\r\n        } else {\r\n            cachedClearTimeout = defaultClearTimeout;\r\n        }\r\n    } catch (e) {\r\n        cachedClearTimeout = defaultClearTimeout;\r\n    }\r\n} ())\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0);\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\r\n        cachedSetTimeout = setTimeout;\r\n        return setTimeout(fun, 0);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0);\r\n    } catch(e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0);\r\n        } catch(e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker);\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n        cachedClearTimeout = clearTimeout;\r\n        return clearTimeout(marker);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker);\r\n    } catch (e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker);\r\n        } catch (e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return;\r\n    }\r\n    draining = false;\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue);\r\n    } else {\r\n        queueIndex = -1;\r\n    }\r\n    if (queue.length) {\r\n        drainQueue();\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return;\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick);\r\n    draining = true;\r\n\r\n    var len = queue.length;\r\n    while(len) {\r\n        currentQueue = queue;\r\n        queue = [];\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run();\r\n            }\r\n        }\r\n        queueIndex = -1;\r\n        len = queue.length;\r\n    }\r\n    currentQueue = null;\r\n    draining = false;\r\n    runClearTimeout(timeout);\r\n}\r\n\r\nprocess.nextTick = function (fun) {\r\n    var args = new Array(arguments.length - 1);\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i];\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args));\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue);\r\n    }\r\n};\r\n\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun;\r\n    this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n    this.fun.apply(null, this.array);\r\n};\r\nprocess.title = 'browser';\r\nprocess.browser = true;\r\nprocess.env = {};\r\nprocess.argv = [];\r\nprocess.version = ''; // empty string to avoid regexp issues\r\nprocess.versions = {};\r\n\r\nfunction noop() {}\r\n\r\nprocess.on = noop;\r\nprocess.addListener = noop;\r\nprocess.once = noop;\r\nprocess.off = noop;\r\nprocess.removeListener = noop;\r\nprocess.removeAllListeners = noop;\r\nprocess.emit = noop;\r\nprocess.prependListener = noop;\r\nprocess.prependOnceListener = noop;\r\n\r\nprocess.listeners = function (name) { return [] }\r\n\r\nprocess.binding = function (name) {\r\n    throw new Error('process.binding is not supported');\r\n};\r\n\r\nprocess.cwd = function () { return '/' };\r\nprocess.chdir = function (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n};\r\nprocess.umask = function() { return 0; };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 83\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2015 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\n/* globals Promise */\r\n\r\nvar most = require('most');\r\nvar create = require('@most/create');\r\nvar fromPromise = most.fromPromise;\r\n\r\nvar defaultMessageEvent = 'message';\r\n\r\nexports.fromWebSocket     = fromMessageSource;\r\nexports.toWebSocket       = toWebSocket;\r\n\r\n// EventSource is read-only. See https://developer.mozilla.org/en-US/docs/Web/API/EventSource\r\nexports.fromEventSource   = fromMessageSource;\r\nexports.fromEventSourceOn = fromMessageSourceEvent;\r\n\r\nexports.fromMessagePort   = fromMessageSource;\r\nexports.toMessagePort     = toPort;\r\n\r\nexports.fromWorker        = fromMessageSource;\r\nexports.toWorker          = toPort;\r\n\r\n/**\r\n * Create a stream from a \"source\", which can be a WebSocket, EventSource,\r\n * MessagePort, Worker, or anything that supports addEventListener and \"message\"\r\n * events.  The stream will end when the source closes (emits a \"close\" event),\r\n * and will fail if the source fails (emits an \"error\" event)\r\n * @param {WebSocket} source WebSocket (or compatible, eg SockJS), EventSource,\r\n *  Worker, etc from which to create a stream\r\n * @param {function():*} dispose function to execute when the source is closed,\r\n *  fails, or all consumers lose interest.\r\n * @returns {Stream} stream containing all the \"message\" events received by the source\r\n */\r\nfunction fromMessageSource(source, dispose) {\r\n\treturn fromMessageSourceEvent(defaultMessageEvent, source, dispose);\r\n}\r\n\r\n/**\r\n * Create a stream from a \"source\", which can be a WebSocket, EventSource,\r\n * MessagePort, Worker, or anything that supports addEventListener\r\n * events.  The stream will end when the source closes (emits a \"close\" event),\r\n * and will fail if the source fails (emits an \"error\" event)\r\n * @private\r\n * @param {string} eventName name of the specific event to listen to\r\n * @param {WebSocket} source WebSocket (or compatible, eg SockJS), EventSource,\r\n *  Worker, etc from which to create a stream\r\n * @param {function():*} dispose function to execute when the source is closed,\r\n *  fails, or all consumers lose interest.\r\n * @returns {Stream} stream containing all the \"message\" events received by the source\r\n */\r\nfunction fromMessageSourceEvent(eventName, source, dispose) {\r\n\treturn create(function(add, end, error) {\r\n\t\treturn pipeFromSource(source, eventName, dispose, add, end, error);\r\n\t});\r\n}\r\n\r\n/**\r\n * Send all events in a stream to a WebSocket\r\n * @param {Stream} stream Stream whose events will be sent to the WebSocket\r\n * @param {WebSocket} socket WebSocket (or compatible, eg SockJS) to which to\r\n *  send events\r\n * @returns {Promise} promise for the end of the stream.  If the WebSocket closes\r\n *  before the stream ends, the returned promise will fulfill if the WebSocket\r\n *  closes cleanly, or will reject if the WebSocket errors.  If the stream ends\r\n *  before the WebSocket closes, the returned promise will fulfill if the stream\r\n *  ends cleanly, or will reject if the stream errors.\r\n */\r\nfunction toWebSocket(stream, socket) {\r\n\treturn pipeToSink(stream, initOpenable, send, socket);\r\n}\r\n\r\nfunction send(socket, msg) {\r\n\tsocket.send(msg);\r\n}\r\n\r\nfunction initOpenable(openable) {\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\topenable.addEventListener('open', resolve);\r\n\t\topenable.addEventListener('error', reject);\r\n\t});\r\n}\r\n\r\n/**\r\n * Send all events in a stream to anything with a postMessage API\r\n * @param {Stream} stream Stream whose events will be posted to the sink\r\n * @param {{postMessage:function(*)}} sink object with postMessage API\r\n * @returns {Promise} promise for the end of the stream.  If the WebSocket closes\r\n *  before the stream ends, the returned promise will fulfill if the sink\r\n *  closes cleanly, or will reject if the WebSocket errors.  If the stream ends\r\n *  before the WebSocket closes, the returned promise will fulfill if the stream\r\n *  ends cleanly, or will reject if the stream errors.\r\n */\r\nfunction toPort(stream, sink) {\r\n\treturn pipeToSink(stream, Promise.resolve, postMessage, sink);\r\n}\r\n\r\nfunction postMessage(sink, msg) {\r\n\tsink.postMessage(msg);\r\n}\r\n\r\n/**\r\n * Pipe all events from a source to a stream\r\n * @private\r\n * @param {{addEventListener:function}} source that supports at least \"message\" events\r\n * @param {function} dispose optional function to execute when stream ends\r\n * @param {function(x:*)} add function to add an event to the stream\r\n * @param {function()} end function to end the stream\r\n * @param {function(e:Error)} error function to signal the stream has failed\r\n * @returns {function} function to remove event handlers and call dispose if provided\r\n */\r\nfunction pipeFromSource(source, eventName, dispose, add, end, error) {\r\n\tif(typeof dispose !== 'function') {\r\n\t\tdispose = noop;\r\n\t}\r\n\r\n\tif('onopen' in source) {\r\n\t\tsource.addEventListener('open', onOpen);\r\n\t} else {\r\n\t\tonOpen();\r\n\t}\r\n\r\n\tfunction onOpen() {\r\n\t\tsource.addEventListener('close', end);\r\n\t\tsource.addEventListener('error', error);\r\n\t\tsource.addEventListener(eventName, add);\r\n\t}\r\n\r\n\treturn function() {\r\n\t\tif('onopen' in source) {\r\n\t\t\tsource.removeEventListener('open', add);\r\n\t\t}\r\n\r\n\t\tsource.removeEventListener('close', end);\r\n\t\tsource.removeEventListener('error', error);\r\n\t\tsource.removeEventListener(eventName, add);\r\n\t\treturn dispose();\r\n\t};\r\n}\r\n\r\n/**\r\n * Pipe all events in a stream to a sink\r\n * @private\r\n * @param {Stream} stream event stream to pipe to sink\r\n * @param {function:Promise} init function to initialize the sink before\r\n *  messages are sent.\r\n * @param {function} send function to send a message to sink\r\n * @param {*} sink\r\n * @returns {Promise} promise that fulfills once the stream ends (ie all events have been sent\r\n *  to sink), or rejects when stream or sink fails.\r\n */\r\nfunction pipeToSink(stream, init, send, sink) {\r\n\treturn init(sink).then(function() {\r\n\t\treturn doSendMessage(stream, send, sink);\r\n\t});\r\n}\r\n\r\nfunction doSendMessage(stream, send, sink) {\r\n\tvar endSignal = fromPromise(new Promise(function(resolve, reject) {\r\n\t\tsink.addEventListener('close', resolve);\r\n\t\tsink.addEventListener('error', reject);\r\n\t}));\r\n\r\n\treturn stream.takeUntil(endSignal).forEach(function (x) {\r\n\t\tsend(sink, x);\r\n\t});\r\n}\r\n\r\nfunction noop() {}\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most-w3msg/most-w3msg.js\n// module id = 84\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\n/**\r\n * Create a new Disposable which will dispose its underlying resource.\r\n * @param {function} dispose function\r\n * @param {*?} data any data to be passed to disposer function\r\n * @constructor\r\n */\r\nexport default function Disposable (dispose, data) {\r\n  this._dispose = dispose\r\n  this._data = data\r\n}\r\n\r\nDisposable.prototype.dispose = function () {\r\n  return this._dispose(this._data)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/disposable/Disposable.js\n// module id = 85\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport default function SettableDisposable () {\r\n  this.disposable = void 0\r\n  this.disposed = false\r\n  this._resolve = void 0\r\n\r\n  var self = this\r\n  this.result = new Promise(function (resolve) {\r\n    self._resolve = resolve\r\n  })\r\n}\r\n\r\nSettableDisposable.prototype.setDisposable = function (disposable) {\r\n  if (this.disposable !== void 0) {\r\n    throw new Error('setDisposable called more than once')\r\n  }\r\n\r\n  this.disposable = disposable\r\n\r\n  if (this.disposed) {\r\n    this._resolve(disposable.dispose())\r\n  }\r\n}\r\n\r\nSettableDisposable.prototype.dispose = function () {\r\n  if (this.disposed) {\r\n    return this.result\r\n  }\r\n\r\n  this.disposed = true\r\n\r\n  if (this.disposable !== void 0) {\r\n    this.result = this.disposable.dispose()\r\n  }\r\n\r\n  return this.result\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/disposable/SettableDisposable.js\n// module id = 86\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport function isPromise (p) {\r\n  return p !== null && typeof p === 'object' && typeof p.then === 'function'\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/Promise.js\n// module id = 87\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport { fromArray } from './fromArray'\r\nimport { isIterable } from '../iterable'\r\nimport { fromIterable } from './fromIterable'\r\nimport getObservable from '../observable/getObservable'\r\nimport { fromObservable } from '../observable/fromObservable'\r\nimport { isArrayLike } from '@most/prelude'\r\n\r\nexport function from (a) { // eslint-disable-line complexity\r\n  if (a instanceof Stream) {\r\n    return a\r\n  }\r\n\r\n  var observable = getObservable(a)\r\n  if (observable != null) {\r\n    return fromObservable(observable)\r\n  }\r\n\r\n  if (Array.isArray(a) || isArrayLike(a)) {\r\n    return fromArray(a)\r\n  }\r\n\r\n  if (isIterable(a)) {\r\n    return fromIterable(a)\r\n  }\r\n\r\n  throw new TypeError('from(x) must be observable, iterable, or array-like: ' + a)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/from.js\n// module id = 88\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport PropagateTask from '../scheduler/PropagateTask'\r\n\r\nexport function fromArray (a) {\r\n  return new Stream(new ArraySource(a))\r\n}\r\n\r\nfunction ArraySource (a) {\r\n  this.array = a\r\n}\r\n\r\nArraySource.prototype.run = function (sink, scheduler) {\r\n  return scheduler.asap(new PropagateTask(runProducer, this.array, sink))\r\n}\r\n\r\nfunction runProducer (t, array, sink) {\r\n  for (var i = 0, l = array.length; i < l && this.active; ++i) {\r\n    sink.event(t, array[i])\r\n  }\r\n\r\n  this.active && sink.end(t)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/fromArray.js\n// module id = 89\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport { getIterator } from '../iterable'\r\nimport PropagateTask from '../scheduler/PropagateTask'\r\n\r\nexport function fromIterable (iterable) {\r\n  return new Stream(new IterableSource(iterable))\r\n}\r\n\r\nfunction IterableSource (iterable) {\r\n  this.iterable = iterable\r\n}\r\n\r\nIterableSource.prototype.run = function (sink, scheduler) {\r\n  return scheduler.asap(new PropagateTask(runProducer, getIterator(this.iterable), sink))\r\n}\r\n\r\nfunction runProducer (t, iterator, sink) {\r\n  var r = iterator.next()\r\n\r\n  while (!r.done && this.active) {\r\n    sink.event(t, r.value)\r\n    r = iterator.next()\r\n  }\r\n\r\n  sink.end(t, r.value)\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/fromIterable.js\n// module id = 90\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport symbolObservable from 'symbol-observable'\r\n\r\nexport default function getObservable (o) { // eslint-disable-line complexity\r\n  var obs = null\r\n  if (o) {\r\n  // Access foreign method only once\r\n    var method = o[symbolObservable]\r\n    if (typeof method === 'function') {\r\n      obs = method.call(o)\r\n      if (!(obs && typeof obs.subscribe === 'function')) {\r\n        throw new TypeError('invalid observable ' + obs)\r\n      }\r\n    }\r\n  }\r\n\r\n  return obs\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/observable/getObservable.js\n// module id = 91\n// module chunks = 0 1","module.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/harmony-module.js\n// module id = 92\n// module chunks = 0 1","export default function symbolObservablePonyfill(root) {\r\n\tvar result;\r\n\tvar Symbol = root.Symbol;\r\n\r\n\tif (typeof Symbol === 'function') {\r\n\t\tif (Symbol.observable) {\r\n\t\t\tresult = Symbol.observable;\r\n\t\t} else {\r\n\t\t\tresult = Symbol('observable');\r\n\t\t\tSymbol.observable = result;\r\n\t\t}\r\n\t} else {\r\n\t\tresult = '@@observable';\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/es/ponyfill.js\n// module id = 93\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport * as dispose from '../disposable/dispose'\r\nimport { tryEnd, tryEvent } from '../source/tryEvent'\r\n\r\nexport function fromObservable (observable) {\r\n  return new Stream(new ObservableSource(observable))\r\n}\r\n\r\nexport function ObservableSource (observable) {\r\n  this.observable = observable\r\n}\r\n\r\nObservableSource.prototype.run = function (sink, scheduler) {\r\n  var sub = this.observable.subscribe(new SubscriberSink(sink, scheduler))\r\n  if (typeof sub === 'function') {\r\n    return dispose.create(sub)\r\n  } else if (sub && typeof sub.unsubscribe === 'function') {\r\n    return dispose.create(unsubscribe, sub)\r\n  }\r\n\r\n  throw new TypeError('Observable returned invalid subscription ' + String(sub))\r\n}\r\n\r\nexport function SubscriberSink (sink, scheduler) {\r\n  this.sink = sink\r\n  this.scheduler = scheduler\r\n}\r\n\r\nSubscriberSink.prototype.next = function (x) {\r\n  tryEvent(this.scheduler.now(), x, this.sink)\r\n}\r\n\r\nSubscriberSink.prototype.complete = function (x) {\r\n  tryEnd(this.scheduler.now(), x, this.sink)\r\n}\r\n\r\nSubscriberSink.prototype.error = function (e) {\r\n  this.sink.error(this.scheduler.now(), e)\r\n}\r\n\r\nfunction unsubscribe (subscription) {\r\n  return subscription.unsubscribe()\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/observable/fromObservable.js\n// module id = 94\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport Stream from '../Stream'\r\nimport PropagateTask from '../scheduler/PropagateTask'\r\n\r\n/**\r\n * Create a stream that emits the current time periodically\r\n * @param {Number} period periodicity of events in millis\r\n * @param {*} deprecatedValue @deprecated value to emit each period\r\n * @returns {Stream} new stream that emits the current time every period\r\n */\r\nexport function periodic (period, deprecatedValue) {\r\n  return new Stream(new Periodic(period, deprecatedValue))\r\n}\r\n\r\nfunction Periodic (period, value) {\r\n  this.period = period\r\n  this.value = value\r\n}\r\n\r\nPeriodic.prototype.run = function (sink, scheduler) {\r\n  return scheduler.periodic(this.period, PropagateTask.event(this.value, sink))\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/source/periodic.js\n// module id = 95\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport defaultScheduler from '../scheduler/defaultScheduler'\r\nimport * as dispose from '../disposable/dispose'\r\nimport fatalError from '../fatalError'\r\n\r\nexport function subscribe (subscriber, stream) {\r\n  if (Object(subscriber) !== subscriber) {\r\n    throw new TypeError('subscriber must be an object')\r\n  }\r\n\r\n  var disposable = dispose.settable()\r\n  var observer = new SubscribeObserver(fatalError, subscriber, disposable)\r\n\r\n  disposable.setDisposable(stream.source.run(observer, defaultScheduler))\r\n\r\n  return new Subscription(disposable)\r\n}\r\n\r\nexport function SubscribeObserver (fatalError, subscriber, disposable) {\r\n  this.fatalError = fatalError\r\n  this.subscriber = subscriber\r\n  this.disposable = disposable\r\n}\r\n\r\nSubscribeObserver.prototype.event = function (t, x) {\r\n  if (!this.disposable.disposed && typeof this.subscriber.next === 'function') {\r\n    this.subscriber.next(x)\r\n  }\r\n}\r\n\r\nSubscribeObserver.prototype.end = function (t, x) {\r\n  if (!this.disposable.disposed) {\r\n    var s = this.subscriber\r\n    var fatalError = this.fatalError\r\n    Promise.resolve(this.disposable.dispose()).then(function () {\r\n      if (typeof s.complete === 'function') {\r\n        s.complete(x)\r\n      }\r\n    }).catch(function (e) {\r\n      throwError(e, s, fatalError)\r\n    })\r\n  }\r\n}\r\n\r\nSubscribeObserver.prototype.error = function (t, e) {\r\n  var s = this.subscriber\r\n  var fatalError = this.fatalError\r\n  Promise.resolve(this.disposable.dispose()).then(function () {\r\n    throwError(e, s, fatalError)\r\n  })\r\n}\r\n\r\nexport function Subscription (disposable) {\r\n  this.disposable = disposable\r\n}\r\n\r\nSubscription.prototype.unsubscribe = function () {\r\n  this.disposable.dispose()\r\n}\r\n\r\nfunction throwError (e1, subscriber, throwError) {\r\n  if (typeof subscriber.error === 'function') {\r\n    try {\r\n      subscriber.error(e1)\r\n    } catch (e2) {\r\n      throwError(e2)\r\n    }\r\n  } else {\r\n    throwError(e1)\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/observable/subscribe.js\n// module id = 96\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport ScheduledTask from './ScheduledTask'\r\nimport { runTask } from '../task'\r\n\r\nexport default function Scheduler (timer, timeline) {\r\n  this.timer = timer\r\n  this.timeline = timeline\r\n\r\n  this._timer = null\r\n  this._nextArrival = Infinity\r\n\r\n  var self = this\r\n  this._runReadyTasksBound = function () {\r\n    self._runReadyTasks(self.now())\r\n  }\r\n}\r\n\r\nScheduler.prototype.now = function () {\r\n  return this.timer.now()\r\n}\r\n\r\nScheduler.prototype.asap = function (task) {\r\n  return this.schedule(0, -1, task)\r\n}\r\n\r\nScheduler.prototype.delay = function (delay, task) {\r\n  return this.schedule(delay, -1, task)\r\n}\r\n\r\nScheduler.prototype.periodic = function (period, task) {\r\n  return this.schedule(0, period, task)\r\n}\r\n\r\nScheduler.prototype.schedule = function (delay, period, task) {\r\n  var now = this.now()\r\n  var st = new ScheduledTask(now + Math.max(0, delay), period, task, this)\r\n\r\n  this.timeline.add(st)\r\n  this._scheduleNextRun(now)\r\n  return st\r\n}\r\n\r\nScheduler.prototype.cancel = function (task) {\r\n  task.active = false\r\n  if (this.timeline.remove(task)) {\r\n    this._reschedule()\r\n  }\r\n}\r\n\r\nScheduler.prototype.cancelAll = function (f) {\r\n  this.timeline.removeAll(f)\r\n  this._reschedule()\r\n}\r\n\r\nScheduler.prototype._reschedule = function () {\r\n  if (this.timeline.isEmpty()) {\r\n    this._unschedule()\r\n  } else {\r\n    this._scheduleNextRun(this.now())\r\n  }\r\n}\r\n\r\nScheduler.prototype._unschedule = function () {\r\n  this.timer.clearTimer(this._timer)\r\n  this._timer = null\r\n}\r\n\r\nScheduler.prototype._scheduleNextRun = function (now) { // eslint-disable-line complexity\r\n  if (this.timeline.isEmpty()) {\r\n    return\r\n  }\r\n\r\n  var nextArrival = this.timeline.nextArrival()\r\n\r\n  if (this._timer === null) {\r\n    this._scheduleNextArrival(nextArrival, now)\r\n  } else if (nextArrival < this._nextArrival) {\r\n    this._unschedule()\r\n    this._scheduleNextArrival(nextArrival, now)\r\n  }\r\n}\r\n\r\nScheduler.prototype._scheduleNextArrival = function (nextArrival, now) {\r\n  this._nextArrival = nextArrival\r\n  var delay = Math.max(0, nextArrival - now)\r\n  this._timer = this.timer.setTimer(this._runReadyTasksBound, delay)\r\n}\r\n\r\nScheduler.prototype._runReadyTasks = function (now) {\r\n  this._timer = null\r\n  this.timeline.runTasks(now, runTask)\r\n  this._scheduleNextRun(this.now())\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/scheduler/Scheduler.js\n// module id = 97\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nexport default function ScheduledTask (delay, period, task, scheduler) {\r\n  this.time = delay\r\n  this.period = period\r\n  this.task = task\r\n  this.scheduler = scheduler\r\n  this.active = true\r\n}\r\n\r\nScheduledTask.prototype.run = function () {\r\n  return this.task.run(this.time)\r\n}\r\n\r\nScheduledTask.prototype.error = function (e) {\r\n  return this.task.error(this.time, e)\r\n}\r\n\r\nScheduledTask.prototype.dispose = function () {\r\n  this.scheduler.cancel(this)\r\n  return this.task.dispose()\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/scheduler/ScheduledTask.js\n// module id = 98\n// module chunks = 0 1","/** @license MIT License (c) copyright 2010-2016 original author or authors */\r\n/** @author Brian Cavalier */\r\n/** @author John Hann */\r\n\r\nimport { defer } from '../task'\r\n\r\n/* global setTimeout, clearTimeout */\r\n\r\nexport default function ClockTimer () {}\r\n\r\nClockTimer.prototype.now = Date.now\r\n\r\nClockTimer.prototype.setTimer = function (f, dt) {\r\n  return dt <= 0 ? runAsap(f) : setTimeout(f, dt)\r\n}\r\n\r\nClockTimer.prototype.clearTimer = function (t) {\r\n  return t instanceof Asap ? t.cancel() : clearTimeout(t)\r\n}\r\n\r\nfunction Asap (f) {\r\n  this.f = f\r\n  this.active = true\r\n}\r\n\r\nAsap.prototype.run = function () {\r\n  return this.active && this.f()\r\n}\r\n\r\nAsap.prototype.error = function (e) {\r\n  throw e\r\n}\r\n\r\nAsap.prototype.cancel = function () {\r\n  this.active = false\r\n}\r\n\r\nfunction runAsap (f) {\r\n  var task = new Asap(f)\r\n  defer(task)\r\n  return task\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/most/src/scheduler/ClockTimer.js\n// module id = 99\n// module chunks = 0 1"],"sourceRoot":""}